ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.section	.text.ADC_Init,"ax",%progbits
  21              		.align	2
  22              		.global	ADC_Init
  23              		.code	16
  24              		.thumb_func
  25              		.type	ADC_Init, %function
  26              	ADC_Init:
  27              	.LFB1:
  28              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 2


  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u, 0x000000
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 3


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  29              		.loc 1 95 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 4


 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  37              		.loc 1 172 0
  38 0002 0321     		movs	r1, #3
  39 0004 0E20     		movs	r0, #14
  40 0006 FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  42              		.loc 1 173 0
  43 000a 4249     		ldr	r1, .L12
  44 000c 0E20     		movs	r0, #14
  45 000e FFF7FEFF 		bl	CyIntSetVector
  46              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  47              		.loc 1 177 0
  48 0012 0F22     		movs	r2, #15
  49 0014 404B     		ldr	r3, .L12+4
  50 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 5


 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 180 0
  52 0018 404B     		ldr	r3, .L12+8
  53 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 178 0
  55 001c 002B     		cmp	r3, #0
  56 001e 01DA     		bge	.L10
  57 0020 3F49     		ldr	r1, .L12+12
  58 0022 00E0     		b	.L2
  59              	.L10:
  60 0024 3F49     		ldr	r1, .L12+16
  61              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 178 0 is_stmt 0 discriminator 4
  63 0026 404A     		ldr	r2, .L12+20
  64 0028 1368     		ldr	r3, [r2]
  65 002a 0B43     		orrs	r3, r1
  66 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  67              		.loc 1 182 0 is_stmt 1 discriminator 4
  68 002e 3F4A     		ldr	r2, .L12+24
  69 0030 3F4B     		ldr	r3, .L12+28
  70 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  71              		.loc 1 183 0 discriminator 4
  72 0034 3F4A     		ldr	r2, .L12+32
  73 0036 404B     		ldr	r3, .L12+36
  74 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  75              		.loc 1 184 0 discriminator 4
  76 003a 0023     		movs	r3, #0
  77 003c 3F4A     		ldr	r2, .L12+40
  78 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  79              		.loc 1 185 0 discriminator 4
  80 0040 3F4A     		ldr	r2, .L12+44
  81 0042 4049     		ldr	r1, .L12+48
  82 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  83              		.loc 1 186 0 discriminator 4
  84 0046 4049     		ldr	r1, .L12+52
  85 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  86              		.loc 1 190 0 discriminator 4
  87 004a 404A     		ldr	r2, .L12+56
  88 004c 1168     		ldr	r1, [r2]
  89 004e 8020     		movs	r0, #128
  90 0050 4002     		lsls	r0, r0, #9
  91 0052 0143     		orrs	r1, r0
  92 0054 1160     		str	r1, [r2]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 6


 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  93              		.loc 1 193 0 discriminator 4
  94 0056 3E49     		ldr	r1, .L12+60
  95 0058 0A68     		ldr	r2, [r1]
  96 005a 0243     		orrs	r2, r0
  97 005c 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  98              		.loc 1 197 0 discriminator 4
  99 005e 3D4A     		ldr	r2, .L12+64
 100 0060 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 101              		.loc 1 198 0 discriminator 4
 102 0062 3D4A     		ldr	r2, .L12+68
 103 0064 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 104              		.loc 1 199 0 discriminator 4
 105 0066 0133     		adds	r3, r3, #1
 106 0068 3C4A     		ldr	r2, .L12+72
 107 006a 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 108              		.loc 1 202 0 discriminator 4
 109 006c 0221     		movs	r1, #2
 110 006e 3C4A     		ldr	r2, .L12+76
 111 0070 1160     		str	r1, [r2]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 112              		.loc 1 206 0 discriminator 4
 113 0072 3C49     		ldr	r1, .L12+80
 114 0074 0868     		ldr	r0, [r1]
 115              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 116              		.loc 1 207 0 discriminator 4
 117 0076 3C4A     		ldr	r2, .L12+84
 118 0078 0240     		ands	r2, r0
 119              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 120              		.loc 1 213 0 discriminator 4
 121 007a 1343     		orrs	r3, r2
 122              	.LVL4:
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 7


 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 123              		.loc 1 226 0 discriminator 4
 124 007c 0B60     		str	r3, [r1]
 125              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 126              		.loc 1 232 0 discriminator 4
 127 007e 0024     		movs	r4, #0
 128 0080 45E0     		b	.L3
 129              	.LVL6:
 130              	.L9:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 131              		.loc 1 234 0
 132 0082 3A49     		ldr	r1, .L12+88
 133 0084 A200     		lsls	r2, r4, #2
 134 0086 5058     		ldr	r0, [r2, r1]
 135 0088 DC23     		movs	r3, #220
 136 008a 9B01     		lsls	r3, r3, #6
 137 008c 0340     		ands	r3, r0
 138              	.LVL7:
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 139              		.loc 1 236 0
 140 008e 0919     		adds	r1, r1, r4
 141 0090 097C     		ldrb	r1, [r1, #16]
 142 0092 0B43     		orrs	r3, r1
 143              	.LVL8:
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 144              		.loc 1 253 0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 8


 145 0094 3649     		ldr	r1, .L12+92
 146 0096 8C46     		mov	ip, r1
 147 0098 6244     		add	r2, r2, ip
 148 009a 1360     		str	r3, [r2]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 149              		.loc 1 255 0
 150 009c C307     		lsls	r3, r0, #31
 151 009e 07D5     		bpl	.L4
 152              	.LVL9:
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 153              		.loc 1 257 0
 154 00a0 2C49     		ldr	r1, .L12+64
 155 00a2 0A68     		ldr	r2, [r1]
 156              	.LVL10:
 157 00a4 0123     		movs	r3, #1
 158 00a6 A340     		lsls	r3, r3, r4
 159 00a8 1B04     		lsls	r3, r3, #16
 160 00aa 1B0C     		lsrs	r3, r3, #16
 161 00ac 1343     		orrs	r3, r2
 162 00ae 0B60     		str	r3, [r1]
 163              	.LVL11:
 164              	.L4:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 165              		.loc 1 260 0
 166 00b0 A300     		lsls	r3, r4, #2
 167 00b2 2E4A     		ldr	r2, .L12+88
 168              	.LVL12:
 169 00b4 9B58     		ldr	r3, [r3, r2]
 170 00b6 9B07     		lsls	r3, r3, #30
 171 00b8 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 172              		.loc 1 262 0
 173 00ba 2749     		ldr	r1, .L12+68
 174 00bc 0A68     		ldr	r2, [r1]
 175              	.LVL13:
 176 00be 0123     		movs	r3, #1
 177 00c0 A340     		lsls	r3, r3, r4
 178 00c2 1B04     		lsls	r3, r3, #16
 179 00c4 1B0C     		lsrs	r3, r3, #16
 180 00c6 1343     		orrs	r3, r2
 181 00c8 0B60     		str	r3, [r1]
 182              	.L5:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 9


 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 183              		.loc 1 282 0
 184 00ca A300     		lsls	r3, r4, #2
 185 00cc 274A     		ldr	r2, .L12+88
 186              	.LVL14:
 187 00ce 9B58     		ldr	r3, [r3, r2]
 188 00d0 9A05     		lsls	r2, r3, #22
 189 00d2 02D5     		bpl	.L11
 190              	.LVL15:
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 191              		.loc 1 284 0
 192 00d4 8020     		movs	r0, #128
 193              	.LVL16:
 194 00d6 4000     		lsls	r0, r0, #1
 195 00d8 01E0     		b	.L6
 196              	.LVL17:
 197              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 198              		.loc 1 288 0
 199 00da 8020     		movs	r0, #128
 200              	.LVL18:
 201 00dc 4001     		lsls	r0, r0, #5
 202              	.L6:
 203              	.LVL19:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 204              		.loc 1 291 0
 205 00de DB05     		lsls	r3, r3, #23
 206 00e0 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 207              		.loc 1 298 0
 208 00e2 6300     		lsls	r3, r4, #1
 209 00e4 0021     		movs	r1, #0
 210 00e6 234A     		ldr	r2, .L12+96
 211 00e8 9952     		strh	r1, [r3, r2]
 212 00ea 03E0     		b	.L8
 213              	.L7:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 10


 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 214              		.loc 1 307 0
 215 00ec 6300     		lsls	r3, r4, #1
 216 00ee 0021     		movs	r1, #0
 217 00f0 204A     		ldr	r2, .L12+96
 218 00f2 9952     		strh	r1, [r3, r2]
 219              	.L8:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 220              		.loc 1 311 0 discriminator 2
 221 00f4 204B     		ldr	r3, .L12+100
 222 00f6 5843     		muls	r0, r3
 223              	.LVL20:
 224 00f8 204B     		ldr	r3, .L12+104
 225 00fa 9C46     		mov	ip, r3
 226 00fc 6044     		add	r0, r0, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 227              		.loc 1 312 0 discriminator 2
 228 00fe 2049     		ldr	r1, .L12+108
 229 0100 FFF7FEFF 		bl	__aeabi_idiv
 230              	.LVL21:
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 231              		.loc 1 311 0 discriminator 2
 232 0104 00B2     		sxth	r0, r0
 233 0106 A200     		lsls	r2, r4, #2
 234 0108 1E4B     		ldr	r3, .L12+112
 235 010a D050     		str	r0, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 236              		.loc 1 232 0 discriminator 2
 237 010c 0134     		adds	r4, r4, #1
 238              	.LVL22:
 239              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 240              		.loc 1 232 0 is_stmt 0 discriminator 1
 241 010e 032C     		cmp	r4, #3
 242 0110 B7D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 243              		.loc 1 314 0 is_stmt 1
 244              		@ sp needed
 245              	.LVL23:
 246 0112 10BD     		pop	{r4, pc}
 247              	.L13:
 248              		.align	2
 249              	.L12:
 250 0114 00000000 		.word	ADC_ISR
 251 0118 20001A40 		.word	1075445792
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 11


 252 011c 80031A40 		.word	1075446656
 253 0120 70201010 		.word	269492336
 254 0124 70200010 		.word	268443760
 255 0128 00001A40 		.word	1075445760
 256 012c 8C000080 		.word	-2147483508
 257 0130 04001A40 		.word	1075445764
 258 0134 0000FF07 		.word	134152192
 259 0138 18001A40 		.word	1075445784
 260 013c 1C001A40 		.word	1075445788
 261 0140 02000200 		.word	131074
 262 0144 10001A40 		.word	1075445776
 263 0148 14001A40 		.word	1075445780
 264 014c 00031A40 		.word	1075446528
 265 0150 40031A40 		.word	1075446592
 266 0154 28021A40 		.word	1075446312
 267 0158 38021A40 		.word	1075446328
 268 015c 18021A40 		.word	1075446296
 269 0160 000F1A40 		.word	1075449600
 270 0164 30001A40 		.word	1075445808
 271 0168 FFFFFFDF 		.word	-536870913
 272 016c 00000000 		.word	.LANCHOR0
 273 0170 80001A40 		.word	1075445888
 274 0174 00000000 		.word	ADC_offset
 275 0178 10270000 		.word	10000
 276 017c E40C0000 		.word	3300
 277 0180 C8190000 		.word	6600
 278 0184 00000000 		.word	ADC_countsPer10Volt
 279              		.cfi_endproc
 280              	.LFE1:
 281              		.size	ADC_Init, .-ADC_Init
 282              		.section	.text.ADC_Enable,"ax",%progbits
 283              		.align	2
 284              		.global	ADC_Enable
 285              		.code	16
 286              		.thumb_func
 287              		.type	ADC_Enable, %function
 288              	ADC_Enable:
 289              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 290              		.loc 1 331 0
 291              		.cfi_startproc
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 12


 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 10B5     		push	{r4, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 298              		.loc 1 332 0
 299 0002 074B     		ldr	r3, .L16
 300 0004 1B68     		ldr	r3, [r3]
 301 0006 002B     		cmp	r3, #0
 302 0008 08DB     		blt	.L14
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 303              		.loc 1 342 0
 304 000a 054A     		ldr	r2, .L16
 305 000c 1368     		ldr	r3, [r2]
 306 000e 8021     		movs	r1, #128
 307 0010 0906     		lsls	r1, r1, #24
 308 0012 0B43     		orrs	r3, r1
 309 0014 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 310              		.loc 1 345 0
 311 0016 0A20     		movs	r0, #10
 312 0018 FFF7FEFF 		bl	CyDelayUs
 313              	.LVL24:
 314              	.L14:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 315              		.loc 1 347 0
 316              		@ sp needed
 317 001c 10BD     		pop	{r4, pc}
 318              	.L17:
 319 001e C046     		.align	2
 320              	.L16:
 321 0020 00001A40 		.word	1075445760
 322              		.cfi_endproc
 323              	.LFE2:
 324              		.size	ADC_Enable, .-ADC_Enable
 325              		.section	.text.ADC_Start,"ax",%progbits
 326              		.align	2
 327              		.global	ADC_Start
 328              		.code	16
 329              		.thumb_func
 330              		.type	ADC_Start, %function
 331              	ADC_Start:
 332              	.LFB0:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 13


  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 333              		.loc 1 64 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 10B5     		push	{r4, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 341              		.loc 1 66 0
 342 0002 064B     		ldr	r3, .L20
 343 0004 1B78     		ldrb	r3, [r3]
 344 0006 002B     		cmp	r3, #0
 345 0008 04D1     		bne	.L19
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 346              		.loc 1 68 0
 347 000a FFF7FEFF 		bl	ADC_Init
 348              	.LVL25:
  69:Generated_Source\PSoC4/ADC.c ****     }
 349              		.loc 1 69 0
 350 000e 0122     		movs	r2, #1
 351 0010 024B     		ldr	r3, .L20
 352 0012 1A70     		strb	r2, [r3]
 353              	.L19:
  71:Generated_Source\PSoC4/ADC.c **** }
 354              		.loc 1 71 0
 355 0014 FFF7FEFF 		bl	ADC_Enable
 356              	.LVL26:
  72:Generated_Source\PSoC4/ADC.c **** 
 357              		.loc 1 72 0
 358              		@ sp needed
 359 0018 10BD     		pop	{r4, pc}
 360              	.L21:
 361 001a C046     		.align	2
 362              	.L20:
 363 001c 00000000 		.word	.LANCHOR1
 364              		.cfi_endproc
 365              	.LFE0:
 366              		.size	ADC_Start, .-ADC_Start
 367              		.section	.text.ADC_Stop,"ax",%progbits
 368              		.align	2
 369              		.global	ADC_Stop
 370              		.code	16
 371              		.thumb_func
 372              		.type	ADC_Stop, %function
 373              	ADC_Stop:
 374              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 14


 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 375              		.loc 1 366 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 380              		.loc 1 367 0
 381 0000 024A     		ldr	r2, .L23
 382 0002 1368     		ldr	r3, [r2]
 383 0004 5B00     		lsls	r3, r3, #1
 384 0006 5B08     		lsrs	r3, r3, #1
 385 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 386              		.loc 1 368 0
 387              		@ sp needed
 388 000a 7047     		bx	lr
 389              	.L24:
 390              		.align	2
 391              	.L23:
 392 000c 00001A40 		.word	1075445760
 393              		.cfi_endproc
 394              	.LFE3:
 395              		.size	ADC_Stop, .-ADC_Stop
 396              		.section	.text.ADC_StartConvert,"ax",%progbits
 397              		.align	2
 398              		.global	ADC_StartConvert
 399              		.code	16
 400              		.thumb_func
 401              		.type	ADC_StartConvert, %function
 402              	ADC_StartConvert:
 403              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 15


 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 404              		.loc 1 392 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 409              		.loc 1 394 0
 410 0000 034A     		ldr	r2, .L26
 411 0002 1368     		ldr	r3, [r2]
 412 0004 8021     		movs	r1, #128
 413 0006 4902     		lsls	r1, r1, #9
 414 0008 0B43     		orrs	r3, r1
 415 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 416              		.loc 1 399 0
 417              		@ sp needed
 418 000c 7047     		bx	lr
 419              	.L27:
 420 000e C046     		.align	2
 421              	.L26:
 422 0010 04001A40 		.word	1075445764
 423              		.cfi_endproc
 424              	.LFE4:
 425              		.size	ADC_StartConvert, .-ADC_StartConvert
 426              		.section	.text.ADC_StopConvert,"ax",%progbits
 427              		.align	2
 428              		.global	ADC_StopConvert
 429              		.code	16
 430              		.thumb_func
 431              		.type	ADC_StopConvert, %function
 432              	ADC_StopConvert:
 433              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 16


 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 434              		.loc 1 417 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 439              		.loc 1 419 0
 440 0000 024A     		ldr	r2, .L29
 441 0002 1168     		ldr	r1, [r2]
 442 0004 024B     		ldr	r3, .L29+4
 443 0006 0B40     		ands	r3, r1
 444 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 445              		.loc 1 421 0
 446              		@ sp needed
 447 000a 7047     		bx	lr
 448              	.L30:
 449              		.align	2
 450              	.L29:
 451 000c 04001A40 		.word	1075445764
 452 0010 FFFFFEFF 		.word	-65537
 453              		.cfi_endproc
 454              	.LFE5:
 455              		.size	ADC_StopConvert, .-ADC_StopConvert
 456              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 457              		.align	2
 458              		.global	ADC_IsEndConversion
 459              		.code	16
 460              		.thumb_func
 461              		.type	ADC_IsEndConversion, %function
 462              	ADC_IsEndConversion:
 463              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 17


 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 464              		.loc 1 451 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL27:
 470 0000 0200     		movs	r2, r0
 471              	.LVL28:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 472              		.loc 1 454 0
 473 0002 8307     		lsls	r3, r0, #30
 474 0004 0CD0     		beq	.L35
 475              	.LVL29:
 476              	.L34:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 477              		.loc 1 458 0 discriminator 2
 478 0006 074B     		ldr	r3, .L36
 479 0008 1B68     		ldr	r3, [r3]
 480 000a 0120     		movs	r0, #1
 481 000c 1840     		ands	r0, r3
 482              	.LVL30:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 483              		.loc 1 459 0 discriminator 2
 484 000e 01D1     		bne	.L33
 485              		.loc 1 459 0 is_stmt 0 discriminator 1
 486 0010 9307     		lsls	r3, r2, #30
 487 0012 F8D4     		bmi	.L34
 488              	.L33:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 489              		.loc 1 461 0 is_stmt 1
 490 0014 0028     		cmp	r0, #0
 491 0016 04D0     		beq	.L32
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 492              		.loc 1 464 0
 493 0018 0122     		movs	r2, #1
 494              	.LVL31:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 18


 495 001a 024B     		ldr	r3, .L36
 496 001c 1A60     		str	r2, [r3]
 497 001e 00E0     		b	.L32
 498              	.LVL32:
 499              	.L35:
 452:Generated_Source\PSoC4/ADC.c **** 
 500              		.loc 1 452 0
 501 0020 0020     		movs	r0, #0
 502              	.LVL33:
 503              	.L32:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 504              		.loc 1 486 0
 505              		@ sp needed
 506 0022 7047     		bx	lr
 507              	.L37:
 508              		.align	2
 509              	.L36:
 510 0024 10021A40 		.word	1075446288
 511              		.cfi_endproc
 512              	.LFE6:
 513              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 514              		.section	.text.ADC_GetResult16,"ax",%progbits
 515              		.align	2
 516              		.global	ADC_GetResult16
 517              		.code	16
 518              		.thumb_func
 519              		.type	ADC_GetResult16, %function
 520              	ADC_GetResult16:
 521              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 19


 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 522              		.loc 1 505 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL34:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 531 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 532              		.loc 1 509 0
 533 0004 0328     		cmp	r0, #3
 534 0006 02D9     		bls	.L39
 535              		.loc 1 509 0 is_stmt 0 discriminator 1
 536 0008 0020     		movs	r0, #0
 537              	.LVL35:
 538 000a FFF7FEFF 		bl	CyHalt
 539              	.LVL36:
 540              	.L39:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 541              		.loc 1 511 0 is_stmt 1
 542 000e 032C     		cmp	r4, #3
 543 0010 07D8     		bhi	.L41
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 544              		.loc 1 513 0
 545 0012 A400     		lsls	r4, r4, #2
 546              	.LVL37:
 547 0014 044B     		ldr	r3, .L42
 548 0016 9C46     		mov	ip, r3
 549 0018 6444     		add	r4, r4, ip
 550 001a 2068     		ldr	r0, [r4]
 551 001c 0004     		lsls	r0, r0, #16
 552 001e 000C     		lsrs	r0, r0, #16
 553              	.LVL38:
 554 0020 00E0     		b	.L40
 555              	.LVL39:
 556              	.L41:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 20


 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 557              		.loc 1 521 0
 558 0022 0020     		movs	r0, #0
 559              	.LVL40:
 560              	.L40:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 561              		.loc 1 525 0
 562 0024 00B2     		sxth	r0, r0
 563              	.LVL41:
 526:Generated_Source\PSoC4/ADC.c **** }
 564              		.loc 1 526 0
 565              		@ sp needed
 566 0026 10BD     		pop	{r4, pc}
 567              	.L43:
 568              		.align	2
 569              	.L42:
 570 0028 80011A40 		.word	1075446144
 571              		.cfi_endproc
 572              	.LFE7:
 573              		.size	ADC_GetResult16, .-ADC_GetResult16
 574              		.section	.text.ADC_SetChanMask,"ax",%progbits
 575              		.align	2
 576              		.global	ADC_SetChanMask
 577              		.code	16
 578              		.thumb_func
 579              		.type	ADC_SetChanMask, %function
 580              	ADC_SetChanMask:
 581              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 21


 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 582              		.loc 1 550 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL42:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 588              		.loc 1 551 0
 589 0000 0F23     		movs	r3, #15
 590 0002 1840     		ands	r0, r3
 591              	.LVL43:
 592 0004 014B     		ldr	r3, .L45
 593 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 594              		.loc 1 552 0
 595              		@ sp needed
 596 0008 7047     		bx	lr
 597              	.L46:
 598 000a C046     		.align	2
 599              	.L45:
 600 000c 20001A40 		.word	1075445792
 601              		.cfi_endproc
 602              	.LFE8:
 603              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 604              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 605              		.align	2
 606              		.global	ADC_SetLowLimit
 607              		.code	16
 608              		.thumb_func
 609              		.type	ADC_SetLowLimit, %function
 610              	ADC_SetLowLimit:
 611              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 22


 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 612              		.loc 1 594 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL44:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 618              		.loc 1 595 0
 619 0000 054A     		ldr	r2, .L48
 620 0002 1368     		ldr	r3, [r2]
 621 0004 1B0C     		lsrs	r3, r3, #16
 622 0006 1B04     		lsls	r3, r3, #16
 623 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 624              		.loc 1 596 0
 625 000a 1368     		ldr	r3, [r2]
 626 000c 0004     		lsls	r0, r0, #16
 627              	.LVL45:
 628 000e 000C     		lsrs	r0, r0, #16
 629 0010 1843     		orrs	r0, r3
 630 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 631              		.loc 1 597 0
 632              		@ sp needed
 633 0014 7047     		bx	lr
 634              	.L49:
 635 0016 C046     		.align	2
 636              	.L48:
 637 0018 18001A40 		.word	1075445784
 638              		.cfi_endproc
 639              	.LFE9:
 640              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 641              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 642              		.align	2
 643              		.global	ADC_SetHighLimit
 644              		.code	16
 645              		.thumb_func
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 23


 646              		.type	ADC_SetHighLimit, %function
 647              	ADC_SetHighLimit:
 648              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 649              		.loc 1 615 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654              	.LVL46:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 655              		.loc 1 616 0
 656 0000 044A     		ldr	r2, .L51
 657 0002 1368     		ldr	r3, [r2]
 658 0004 1B04     		lsls	r3, r3, #16
 659 0006 1B0C     		lsrs	r3, r3, #16
 660 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 661              		.loc 1 617 0
 662 000a 1368     		ldr	r3, [r2]
 663 000c 0004     		lsls	r0, r0, #16
 664              	.LVL47:
 665 000e 1843     		orrs	r0, r3
 666 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 667              		.loc 1 618 0
 668              		@ sp needed
 669 0012 7047     		bx	lr
 670              	.L52:
 671              		.align	2
 672              	.L51:
 673 0014 18001A40 		.word	1075445784
 674              		.cfi_endproc
 675              	.LFE10:
 676              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 677              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 678              		.align	2
 679              		.global	ADC_SetLimitMask
 680              		.code	16
 681              		.thumb_func
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 24


 682              		.type	ADC_SetLimitMask, %function
 683              	ADC_SetLimitMask:
 684              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 685              		.loc 1 639 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL48:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 691              		.loc 1 640 0
 692 0000 0F23     		movs	r3, #15
 693 0002 1840     		ands	r0, r3
 694              	.LVL49:
 695 0004 014B     		ldr	r3, .L54
 696 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 697              		.loc 1 641 0
 698              		@ sp needed
 699 0008 7047     		bx	lr
 700              	.L55:
 701 000a C046     		.align	2
 702              	.L54:
 703 000c 38021A40 		.word	1075446328
 704              		.cfi_endproc
 705              	.LFE11:
 706              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 707              		.section	.text.ADC_SetSatMask,"ax",%progbits
 708              		.align	2
 709              		.global	ADC_SetSatMask
 710              		.code	16
 711              		.thumb_func
 712              		.type	ADC_SetSatMask, %function
 713              	ADC_SetSatMask:
 714              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 25


 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 715              		.loc 1 662 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL50:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 721              		.loc 1 663 0
 722 0000 0F23     		movs	r3, #15
 723 0002 1840     		ands	r0, r3
 724              	.LVL51:
 725 0004 014B     		ldr	r3, .L57
 726 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 727              		.loc 1 664 0
 728              		@ sp needed
 729 0008 7047     		bx	lr
 730              	.L58:
 731 000a C046     		.align	2
 732              	.L57:
 733 000c 28021A40 		.word	1075446312
 734              		.cfi_endproc
 735              	.LFE12:
 736              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 737              		.section	.text.ADC_SetOffset,"ax",%progbits
 738              		.align	2
 739              		.global	ADC_SetOffset
 740              		.code	16
 741              		.thumb_func
 742              		.type	ADC_SetOffset, %function
 743              	ADC_SetOffset:
 744              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 26


 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 745              		.loc 1 690 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              	.LVL52:
 750 0000 70B5     		push	{r4, r5, r6, lr}
 751              		.cfi_def_cfa_offset 16
 752              		.cfi_offset 4, -16
 753              		.cfi_offset 5, -12
 754              		.cfi_offset 6, -8
 755              		.cfi_offset 14, -4
 756 0002 0400     		movs	r4, r0
 757 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 758              		.loc 1 692 0
 759 0006 0328     		cmp	r0, #3
 760 0008 02D9     		bls	.L60
 761              		.loc 1 692 0 is_stmt 0 discriminator 1
 762 000a 0020     		movs	r0, #0
 763              	.LVL53:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL54:
 766              	.L60:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 767              		.loc 1 694 0 is_stmt 1
 768 0010 6400     		lsls	r4, r4, #1
 769              	.LVL55:
 770 0012 014B     		ldr	r3, .L61
 771 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 772              		.loc 1 695 0
 773              		@ sp needed
 774 0016 70BD     		pop	{r4, r5, r6, pc}
 775              	.L62:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 27


 776              		.align	2
 777              	.L61:
 778 0018 00000000 		.word	ADC_offset
 779              		.cfi_endproc
 780              	.LFE13:
 781              		.size	ADC_SetOffset, .-ADC_SetOffset
 782              		.section	.text.ADC_SetGain,"ax",%progbits
 783              		.align	2
 784              		.global	ADC_SetGain
 785              		.code	16
 786              		.thumb_func
 787              		.type	ADC_SetGain, %function
 788              	ADC_SetGain:
 789              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 790              		.loc 1 724 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL56:
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0002 0400     		movs	r4, r0
 802 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 28


 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 803              		.loc 1 726 0
 804 0006 0328     		cmp	r0, #3
 805 0008 02D9     		bls	.L64
 806              		.loc 1 726 0 is_stmt 0 discriminator 1
 807 000a 0020     		movs	r0, #0
 808              	.LVL57:
 809 000c FFF7FEFF 		bl	CyHalt
 810              	.LVL58:
 811              	.L64:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 812              		.loc 1 728 0 is_stmt 1
 813 0010 A400     		lsls	r4, r4, #2
 814              	.LVL59:
 815 0012 014B     		ldr	r3, .L65
 816 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 817              		.loc 1 729 0
 818              		@ sp needed
 819              	.LVL60:
 820 0016 70BD     		pop	{r4, r5, r6, pc}
 821              	.L66:
 822              		.align	2
 823              	.L65:
 824 0018 00000000 		.word	ADC_countsPer10Volt
 825              		.cfi_endproc
 826              	.LFE14:
 827              		.size	ADC_SetGain, .-ADC_SetGain
 828              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 829              		.align	2
 830              		.global	ADC_CountsTo_mVolts
 831              		.code	16
 832              		.thumb_func
 833              		.type	ADC_CountsTo_mVolts, %function
 834              	ADC_CountsTo_mVolts:
 835              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 29


 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 836              		.loc 1 757 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL61:
 841 0000 70B5     		push	{r4, r5, r6, lr}
 842              		.cfi_def_cfa_offset 16
 843              		.cfi_offset 4, -16
 844              		.cfi_offset 5, -12
 845              		.cfi_offset 6, -8
 846              		.cfi_offset 14, -4
 847 0002 0400     		movs	r4, r0
 848 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 849              		.loc 1 761 0
 850 0006 0328     		cmp	r0, #3
 851 0008 02D9     		bls	.L68
 852              		.loc 1 761 0 is_stmt 0 discriminator 1
 853 000a 0020     		movs	r0, #0
 854              	.LVL62:
 855 000c FFF7FEFF 		bl	CyHalt
 856              	.LVL63:
 857              	.L68:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 858              		.loc 1 772 0 is_stmt 1
 859 0010 6300     		lsls	r3, r4, #1
 860 0012 0F4A     		ldr	r2, .L71
 861 0014 995A     		ldrh	r1, [r3, r2]
 862 0016 09B2     		sxth	r1, r1
 863 0018 691A     		subs	r1, r5, r1
 864 001a 09B2     		sxth	r1, r1
 865              	.LVL64:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 866              		.loc 1 774 0
 867 001c 0D48     		ldr	r0, .L71+4
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 30


 868 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 869              		.loc 1 775 0
 870 0020 0029     		cmp	r1, #0
 871 0022 06DD     		ble	.L69
 872              		.loc 1 775 0 is_stmt 0 discriminator 1
 873 0024 A300     		lsls	r3, r4, #2
 874 0026 0C4A     		ldr	r2, .L71+8
 875 0028 9A58     		ldr	r2, [r3, r2]
 876 002a D30F     		lsrs	r3, r2, #31
 877 002c 9A18     		adds	r2, r3, r2
 878 002e 5310     		asrs	r3, r2, #1
 879 0030 06E0     		b	.L70
 880              	.L69:
 881              		.loc 1 775 0 discriminator 2
 882 0032 A300     		lsls	r3, r4, #2
 883 0034 084A     		ldr	r2, .L71+8
 884 0036 9A58     		ldr	r2, [r3, r2]
 885 0038 D30F     		lsrs	r3, r2, #31
 886 003a 9A18     		adds	r2, r3, r2
 887 003c 5210     		asrs	r2, r2, #1
 888 003e 5342     		rsbs	r3, r2, #0
 889              	.L70:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 890              		.loc 1 774 0 is_stmt 1
 891 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 892              		.loc 1 776 0
 893 0042 A400     		lsls	r4, r4, #2
 894              	.LVL65:
 895 0044 044B     		ldr	r3, .L71+8
 896 0046 E158     		ldr	r1, [r4, r3]
 897              	.LVL66:
 898 0048 FFF7FEFF 		bl	__aeabi_idiv
 899              	.LVL67:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 900              		.loc 1 774 0
 901 004c 00B2     		sxth	r0, r0
 902              	.LVL68:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 903              		.loc 1 779 0
 904              		@ sp needed
 905 004e 70BD     		pop	{r4, r5, r6, pc}
 906              	.L72:
 907              		.align	2
 908              	.L71:
 909 0050 00000000 		.word	ADC_offset
 910 0054 10270000 		.word	10000
 911 0058 00000000 		.word	ADC_countsPer10Volt
 912              		.cfi_endproc
 913              	.LFE15:
 914              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 915              		.global	__aeabi_lmul
 916              		.global	__aeabi_ldivmod
 917              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 31


 918              		.align	2
 919              		.global	ADC_CountsTo_uVolts
 920              		.code	16
 921              		.thumb_func
 922              		.type	ADC_CountsTo_uVolts, %function
 923              	ADC_CountsTo_uVolts:
 924              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 925              		.loc 1 811 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL69:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 936 0002 0500     		movs	r5, r0
 937 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 938              		.loc 1 815 0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 32


 939 0006 0328     		cmp	r0, #3
 940 0008 02D9     		bls	.L74
 941              		.loc 1 815 0 is_stmt 0 discriminator 1
 942 000a 0020     		movs	r0, #0
 943              	.LVL70:
 944 000c FFF7FEFF 		bl	CyHalt
 945              	.LVL71:
 946              	.L74:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 947              		.loc 1 826 0 is_stmt 1
 948 0010 6A00     		lsls	r2, r5, #1
 949 0012 084B     		ldr	r3, .L75
 950 0014 D05A     		ldrh	r0, [r2, r3]
 951 0016 00B2     		sxth	r0, r0
 952 0018 201A     		subs	r0, r4, r0
 953 001a 00B2     		sxth	r0, r0
 954              	.LVL72:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 955              		.loc 1 828 0
 956 001c C117     		asrs	r1, r0, #31
 957 001e 064A     		ldr	r2, .L75+4
 958 0020 0023     		movs	r3, #0
 959 0022 FFF7FEFF 		bl	__aeabi_lmul
 960              	.LVL73:
 961 0026 AD00     		lsls	r5, r5, #2
 962              	.LVL74:
 963 0028 044B     		ldr	r3, .L75+8
 964 002a EA58     		ldr	r2, [r5, r3]
 965 002c D317     		asrs	r3, r2, #31
 966 002e FFF7FEFF 		bl	__aeabi_ldivmod
 967              	.LVL75:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 968              		.loc 1 831 0
 969              		@ sp needed
 970 0032 70BD     		pop	{r4, r5, r6, pc}
 971              	.L76:
 972              		.align	2
 973              	.L75:
 974 0034 00000000 		.word	ADC_offset
 975 0038 80969800 		.word	10000000
 976 003c 00000000 		.word	ADC_countsPer10Volt
 977              		.cfi_endproc
 978              	.LFE16:
 979              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 33


 980              		.global	__aeabi_i2f
 981              		.global	__aeabi_fmul
 982              		.global	__aeabi_fdiv
 983              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 984              		.align	2
 985              		.global	ADC_CountsTo_Volts
 986              		.code	16
 987              		.thumb_func
 988              		.type	ADC_CountsTo_Volts, %function
 989              	ADC_CountsTo_Volts:
 990              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 991              		.loc 1 856 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL76:
 996 0000 70B5     		push	{r4, r5, r6, lr}
 997              		.cfi_def_cfa_offset 16
 998              		.cfi_offset 4, -16
 999              		.cfi_offset 5, -12
 1000              		.cfi_offset 6, -8
 1001              		.cfi_offset 14, -4
 1002 0002 0400     		movs	r4, r0
 1003 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1004              		.loc 1 860 0
 1005 0006 0328     		cmp	r0, #3
 1006 0008 02D9     		bls	.L78
 1007              		.loc 1 860 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 34


 1008 000a 0020     		movs	r0, #0
 1009              	.LVL77:
 1010 000c FFF7FEFF 		bl	CyHalt
 1011              	.LVL78:
 1012              	.L78:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1013              		.loc 1 871 0 is_stmt 1
 1014 0010 6200     		lsls	r2, r4, #1
 1015 0012 0A4B     		ldr	r3, .L79
 1016 0014 D05A     		ldrh	r0, [r2, r3]
 1017 0016 00B2     		sxth	r0, r0
 1018 0018 281A     		subs	r0, r5, r0
 1019 001a 00B2     		sxth	r0, r0
 1020              	.LVL79:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1021              		.loc 1 873 0
 1022 001c FFF7FEFF 		bl	__aeabi_i2f
 1023              	.LVL80:
 1024 0020 0749     		ldr	r1, .L79+4
 1025 0022 FFF7FEFF 		bl	__aeabi_fmul
 1026              	.LVL81:
 1027 0026 051C     		adds	r5, r0, #0
 1028 0028 A400     		lsls	r4, r4, #2
 1029              	.LVL82:
 1030 002a 064B     		ldr	r3, .L79+8
 1031 002c E058     		ldr	r0, [r4, r3]
 1032 002e FFF7FEFF 		bl	__aeabi_i2f
 1033              	.LVL83:
 1034 0032 011C     		adds	r1, r0, #0
 1035 0034 281C     		adds	r0, r5, #0
 1036 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1037              	.LVL84:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 1038              		.loc 1 876 0
 1039              		@ sp needed
 1040 003a 70BD     		pop	{r4, r5, r6, pc}
 1041              	.L80:
 1042              		.align	2
 1043              	.L79:
 1044 003c 00000000 		.word	ADC_offset
 1045 0040 00002041 		.word	1092616192
 1046 0044 00000000 		.word	ADC_countsPer10Volt
 1047              		.cfi_endproc
 1048              	.LFE17:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 35


 1049              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1050              		.comm	ADC_countsPer10Volt,16,4
 1051              		.comm	ADC_offset,8,4
 1052              		.global	ADC_initVar
 1053              		.section	.rodata
 1054              		.align	2
 1055              		.set	.LANCHOR0,. + 0
 1056              		.type	ADC_channelsConfig, %object
 1057              		.size	ADC_channelsConfig, 16
 1058              	ADC_channelsConfig:
 1059 0000 00000000 		.space	16
 1059      00000000 
 1059      00000000 
 1059      00000000 
 1060              		.type	ADC_InputsPlacement.4874, %object
 1061              		.size	ADC_InputsPlacement.4874, 4
 1062              	ADC_InputsPlacement.4874:
 1063 0010 03       		.byte	3
 1064 0011 02       		.byte	2
 1065 0012 05       		.byte	5
 1066 0013 07       		.byte	7
 1067              		.bss
 1068              		.set	.LANCHOR1,. + 0
 1069              		.type	ADC_initVar, %object
 1070              		.size	ADC_initVar, 1
 1071              	ADC_initVar:
 1072 0000 00       		.space	1
 1073              		.text
 1074              	.Letext0:
 1075              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1076              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1077              		.section	.debug_info,"",%progbits
 1078              	.Ldebug_info0:
 1079 0000 A1050000 		.4byte	0x5a1
 1080 0004 0400     		.2byte	0x4
 1081 0006 00000000 		.4byte	.Ldebug_abbrev0
 1082 000a 04       		.byte	0x4
 1083 000b 01       		.uleb128 0x1
 1084 000c 32000000 		.4byte	.LASF64
 1085 0010 0C       		.byte	0xc
 1086 0011 DD020000 		.4byte	.LASF65
 1087 0015 2A020000 		.4byte	.LASF66
 1088 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1089 001d 00000000 		.4byte	0
 1090 0021 00000000 		.4byte	.Ldebug_line0
 1091 0025 02       		.uleb128 0x2
 1092 0026 01       		.byte	0x1
 1093 0027 06       		.byte	0x6
 1094 0028 0A010000 		.4byte	.LASF0
 1095 002c 02       		.uleb128 0x2
 1096 002d 01       		.byte	0x1
 1097 002e 08       		.byte	0x8
 1098 002f 41030000 		.4byte	.LASF1
 1099 0033 02       		.uleb128 0x2
 1100 0034 02       		.byte	0x2
 1101 0035 05       		.byte	0x5
 1102 0036 5A030000 		.4byte	.LASF2
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 36


 1103 003a 02       		.uleb128 0x2
 1104 003b 02       		.byte	0x2
 1105 003c 07       		.byte	0x7
 1106 003d EB010000 		.4byte	.LASF3
 1107 0041 02       		.uleb128 0x2
 1108 0042 04       		.byte	0x4
 1109 0043 05       		.byte	0x5
 1110 0044 2D010000 		.4byte	.LASF4
 1111 0048 02       		.uleb128 0x2
 1112 0049 04       		.byte	0x4
 1113 004a 07       		.byte	0x7
 1114 004b BA010000 		.4byte	.LASF5
 1115 004f 02       		.uleb128 0x2
 1116 0050 08       		.byte	0x8
 1117 0051 05       		.byte	0x5
 1118 0052 FC000000 		.4byte	.LASF6
 1119 0056 02       		.uleb128 0x2
 1120 0057 08       		.byte	0x8
 1121 0058 07       		.byte	0x7
 1122 0059 C0000000 		.4byte	.LASF7
 1123 005d 03       		.uleb128 0x3
 1124 005e 04       		.byte	0x4
 1125 005f 05       		.byte	0x5
 1126 0060 696E7400 		.ascii	"int\000"
 1127 0064 02       		.uleb128 0x2
 1128 0065 04       		.byte	0x4
 1129 0066 07       		.byte	0x7
 1130 0067 A6010000 		.4byte	.LASF8
 1131 006b 04       		.uleb128 0x4
 1132 006c 5E010000 		.4byte	.LASF9
 1133 0070 02       		.byte	0x2
 1134 0071 E401     		.2byte	0x1e4
 1135 0073 2C000000 		.4byte	0x2c
 1136 0077 04       		.uleb128 0x4
 1137 0078 00000000 		.4byte	.LASF10
 1138 007c 02       		.byte	0x2
 1139 007d E501     		.2byte	0x1e5
 1140 007f 3A000000 		.4byte	0x3a
 1141 0083 04       		.uleb128 0x4
 1142 0084 75010000 		.4byte	.LASF11
 1143 0088 02       		.byte	0x2
 1144 0089 E601     		.2byte	0x1e6
 1145 008b 48000000 		.4byte	0x48
 1146 008f 04       		.uleb128 0x4
 1147 0090 AC030000 		.4byte	.LASF12
 1148 0094 02       		.byte	0x2
 1149 0095 E801     		.2byte	0x1e8
 1150 0097 33000000 		.4byte	0x33
 1151 009b 04       		.uleb128 0x4
 1152 009c 1D010000 		.4byte	.LASF13
 1153 00a0 02       		.byte	0x2
 1154 00a1 E901     		.2byte	0x1e9
 1155 00a3 41000000 		.4byte	0x41
 1156 00a7 04       		.uleb128 0x4
 1157 00a8 6B020000 		.4byte	.LASF14
 1158 00ac 02       		.byte	0x2
 1159 00ad EA01     		.2byte	0x1ea
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 37


 1160 00af B3000000 		.4byte	0xb3
 1161 00b3 02       		.uleb128 0x2
 1162 00b4 04       		.byte	0x4
 1163 00b5 04       		.byte	0x4
 1164 00b6 06030000 		.4byte	.LASF15
 1165 00ba 02       		.uleb128 0x2
 1166 00bb 08       		.byte	0x8
 1167 00bc 04       		.byte	0x4
 1168 00bd 6E010000 		.4byte	.LASF16
 1169 00c1 04       		.uleb128 0x4
 1170 00c2 B6020000 		.4byte	.LASF17
 1171 00c6 02       		.byte	0x2
 1172 00c7 EF01     		.2byte	0x1ef
 1173 00c9 4F000000 		.4byte	0x4f
 1174 00cd 02       		.uleb128 0x2
 1175 00ce 01       		.byte	0x1
 1176 00cf 08       		.byte	0x8
 1177 00d0 78030000 		.4byte	.LASF18
 1178 00d4 04       		.uleb128 0x4
 1179 00d5 24020000 		.4byte	.LASF19
 1180 00d9 02       		.byte	0x2
 1181 00da 9002     		.2byte	0x290
 1182 00dc E0000000 		.4byte	0xe0
 1183 00e0 05       		.uleb128 0x5
 1184 00e1 83000000 		.4byte	0x83
 1185 00e5 02       		.uleb128 0x2
 1186 00e6 08       		.byte	0x8
 1187 00e7 04       		.byte	0x4
 1188 00e8 85020000 		.4byte	.LASF20
 1189 00ec 02       		.uleb128 0x2
 1190 00ed 04       		.byte	0x4
 1191 00ee 07       		.byte	0x7
 1192 00ef 73020000 		.4byte	.LASF21
 1193 00f3 06       		.uleb128 0x6
 1194 00f4 29000000 		.4byte	.LASF26
 1195 00f8 01       		.byte	0x1
 1196 00f9 5E       		.byte	0x5e
 1197 00fa 00000000 		.4byte	.LFB1
 1198 00fe 88010000 		.4byte	.LFE1-.LFB1
 1199 0102 01       		.uleb128 0x1
 1200 0103 9C       		.byte	0x9c
 1201 0104 6E010000 		.4byte	0x16e
 1202 0108 07       		.uleb128 0x7
 1203 0109 6D030000 		.4byte	.LASF22
 1204 010d 01       		.byte	0x1
 1205 010e 60       		.byte	0x60
 1206 010f 83000000 		.4byte	0x83
 1207 0113 00000000 		.4byte	.LLST0
 1208 0117 07       		.uleb128 0x7
 1209 0118 E1010000 		.4byte	.LASF23
 1210 011c 01       		.byte	0x1
 1211 011d 61       		.byte	0x61
 1212 011e 83000000 		.4byte	0x83
 1213 0122 1F000000 		.4byte	.LLST1
 1214 0126 07       		.uleb128 0x7
 1215 0127 0F000000 		.4byte	.LASF24
 1216 012b 01       		.byte	0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 38


 1217 012c 62       		.byte	0x62
 1218 012d 9B000000 		.4byte	0x9b
 1219 0131 78010000 		.4byte	.LLST2
 1220 0135 08       		.uleb128 0x8
 1221 0136 D7000000 		.4byte	.LASF25
 1222 013a 01       		.byte	0x1
 1223 013b 65       		.byte	0x65
 1224 013c 83010000 		.4byte	0x183
 1225 0140 05       		.uleb128 0x5
 1226 0141 03       		.byte	0x3
 1227 0142 10000000 		.4byte	ADC_InputsPlacement.4874
 1228 0146 09       		.uleb128 0x9
 1229 0147 0A000000 		.4byte	.LVL0
 1230 014b 78050000 		.4byte	0x578
 1231 014f 5E010000 		.4byte	0x15e
 1232 0153 0A       		.uleb128 0xa
 1233 0154 01       		.uleb128 0x1
 1234 0155 50       		.byte	0x50
 1235 0156 01       		.uleb128 0x1
 1236 0157 3E       		.byte	0x3e
 1237 0158 0A       		.uleb128 0xa
 1238 0159 01       		.uleb128 0x1
 1239 015a 51       		.byte	0x51
 1240 015b 01       		.uleb128 0x1
 1241 015c 33       		.byte	0x33
 1242 015d 00       		.byte	0
 1243 015e 0B       		.uleb128 0xb
 1244 015f 12000000 		.4byte	.LVL1
 1245 0163 83050000 		.4byte	0x583
 1246 0167 0A       		.uleb128 0xa
 1247 0168 01       		.uleb128 0x1
 1248 0169 50       		.byte	0x50
 1249 016a 01       		.uleb128 0x1
 1250 016b 3E       		.byte	0x3e
 1251 016c 00       		.byte	0
 1252 016d 00       		.byte	0
 1253 016e 0C       		.uleb128 0xc
 1254 016f 7E010000 		.4byte	0x17e
 1255 0173 7E010000 		.4byte	0x17e
 1256 0177 0D       		.uleb128 0xd
 1257 0178 EC000000 		.4byte	0xec
 1258 017c 03       		.byte	0x3
 1259 017d 00       		.byte	0
 1260 017e 0E       		.uleb128 0xe
 1261 017f 6B000000 		.4byte	0x6b
 1262 0183 0E       		.uleb128 0xe
 1263 0184 6E010000 		.4byte	0x16e
 1264 0188 0F       		.uleb128 0xf
 1265 0189 A1030000 		.4byte	.LASF27
 1266 018d 01       		.byte	0x1
 1267 018e 4A01     		.2byte	0x14a
 1268 0190 00000000 		.4byte	.LFB2
 1269 0194 24000000 		.4byte	.LFE2-.LFB2
 1270 0198 01       		.uleb128 0x1
 1271 0199 9C       		.byte	0x9c
 1272 019a AE010000 		.4byte	0x1ae
 1273 019e 0B       		.uleb128 0xb
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 39


 1274 019f 1C000000 		.4byte	.LVL24
 1275 01a3 8E050000 		.4byte	0x58e
 1276 01a7 0A       		.uleb128 0xa
 1277 01a8 01       		.uleb128 0x1
 1278 01a9 50       		.byte	0x50
 1279 01aa 01       		.uleb128 0x1
 1280 01ab 3A       		.byte	0x3a
 1281 01ac 00       		.byte	0
 1282 01ad 00       		.byte	0
 1283 01ae 10       		.uleb128 0x10
 1284 01af 23010000 		.4byte	.LASF28
 1285 01b3 01       		.byte	0x1
 1286 01b4 3F       		.byte	0x3f
 1287 01b5 00000000 		.4byte	.LFB0
 1288 01b9 20000000 		.4byte	.LFE0-.LFB0
 1289 01bd 01       		.uleb128 0x1
 1290 01be 9C       		.byte	0x9c
 1291 01bf D6010000 		.4byte	0x1d6
 1292 01c3 11       		.uleb128 0x11
 1293 01c4 0E000000 		.4byte	.LVL25
 1294 01c8 F3000000 		.4byte	0xf3
 1295 01cc 11       		.uleb128 0x11
 1296 01cd 18000000 		.4byte	.LVL26
 1297 01d1 88010000 		.4byte	0x188
 1298 01d5 00       		.byte	0
 1299 01d6 12       		.uleb128 0x12
 1300 01d7 64030000 		.4byte	.LASF29
 1301 01db 01       		.byte	0x1
 1302 01dc 6D01     		.2byte	0x16d
 1303 01de 00000000 		.4byte	.LFB3
 1304 01e2 10000000 		.4byte	.LFE3-.LFB3
 1305 01e6 01       		.uleb128 0x1
 1306 01e7 9C       		.byte	0x9c
 1307 01e8 12       		.uleb128 0x12
 1308 01e9 EB000000 		.4byte	.LASF30
 1309 01ed 01       		.byte	0x1
 1310 01ee 8701     		.2byte	0x187
 1311 01f0 00000000 		.4byte	.LFB4
 1312 01f4 14000000 		.4byte	.LFE4-.LFB4
 1313 01f8 01       		.uleb128 0x1
 1314 01f9 9C       		.byte	0x9c
 1315 01fa 12       		.uleb128 0x12
 1316 01fb 0D020000 		.4byte	.LASF31
 1317 01ff 01       		.byte	0x1
 1318 0200 A001     		.2byte	0x1a0
 1319 0202 00000000 		.4byte	.LFB5
 1320 0206 14000000 		.4byte	.LFE5-.LFB5
 1321 020a 01       		.uleb128 0x1
 1322 020b 9C       		.byte	0x9c
 1323 020c 13       		.uleb128 0x13
 1324 020d A2020000 		.4byte	.LASF33
 1325 0211 01       		.byte	0x1
 1326 0212 C201     		.2byte	0x1c2
 1327 0214 83000000 		.4byte	0x83
 1328 0218 00000000 		.4byte	.LFB6
 1329 021c 28000000 		.4byte	.LFE6-.LFB6
 1330 0220 01       		.uleb128 0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 40


 1331 0221 9C       		.byte	0x9c
 1332 0222 47020000 		.4byte	0x247
 1333 0226 14       		.uleb128 0x14
 1334 0227 8D010000 		.4byte	.LASF35
 1335 022b 01       		.byte	0x1
 1336 022c C201     		.2byte	0x1c2
 1337 022e 83000000 		.4byte	0x83
 1338 0232 8B010000 		.4byte	.LLST3
 1339 0236 15       		.uleb128 0x15
 1340 0237 16010000 		.4byte	.LASF32
 1341 023b 01       		.byte	0x1
 1342 023c C401     		.2byte	0x1c4
 1343 023e 83000000 		.4byte	0x83
 1344 0242 D0010000 		.4byte	.LLST4
 1345 0246 00       		.byte	0
 1346 0247 13       		.uleb128 0x13
 1347 0248 C7030000 		.4byte	.LASF34
 1348 024c 01       		.byte	0x1
 1349 024d F801     		.2byte	0x1f8
 1350 024f 8F000000 		.4byte	0x8f
 1351 0253 00000000 		.4byte	.LFB7
 1352 0257 2C000000 		.4byte	.LFE7-.LFB7
 1353 025b 01       		.uleb128 0x1
 1354 025c 9C       		.byte	0x9c
 1355 025d 91020000 		.4byte	0x291
 1356 0261 14       		.uleb128 0x14
 1357 0262 73030000 		.4byte	.LASF36
 1358 0266 01       		.byte	0x1
 1359 0267 F801     		.2byte	0x1f8
 1360 0269 83000000 		.4byte	0x83
 1361 026d 06020000 		.4byte	.LLST5
 1362 0271 15       		.uleb128 0x15
 1363 0272 C0030000 		.4byte	.LASF37
 1364 0276 01       		.byte	0x1
 1365 0277 FA01     		.2byte	0x1fa
 1366 0279 83000000 		.4byte	0x83
 1367 027d 4B020000 		.4byte	.LLST6
 1368 0281 0B       		.uleb128 0xb
 1369 0282 0E000000 		.4byte	.LVL36
 1370 0286 99050000 		.4byte	0x599
 1371 028a 0A       		.uleb128 0xa
 1372 028b 01       		.uleb128 0x1
 1373 028c 50       		.byte	0x50
 1374 028d 01       		.uleb128 0x1
 1375 028e 30       		.byte	0x30
 1376 028f 00       		.byte	0
 1377 0290 00       		.byte	0
 1378 0291 0F       		.uleb128 0xf
 1379 0292 CD020000 		.4byte	.LASF38
 1380 0296 01       		.byte	0x1
 1381 0297 2502     		.2byte	0x225
 1382 0299 00000000 		.4byte	.LFB8
 1383 029d 10000000 		.4byte	.LFE8-.LFB8
 1384 02a1 01       		.uleb128 0x1
 1385 02a2 9C       		.byte	0x9c
 1386 02a3 B8020000 		.4byte	0x2b8
 1387 02a7 14       		.uleb128 0x14
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 41


 1388 02a8 7C010000 		.4byte	.LASF39
 1389 02ac 01       		.byte	0x1
 1390 02ad 2502     		.2byte	0x225
 1391 02af 83000000 		.4byte	0x83
 1392 02b3 69020000 		.4byte	.LLST7
 1393 02b7 00       		.byte	0
 1394 02b8 0F       		.uleb128 0xf
 1395 02b9 2A030000 		.4byte	.LASF40
 1396 02bd 01       		.byte	0x1
 1397 02be 5102     		.2byte	0x251
 1398 02c0 00000000 		.4byte	.LFB9
 1399 02c4 1C000000 		.4byte	.LFE9-.LFB9
 1400 02c8 01       		.uleb128 0x1
 1401 02c9 9C       		.byte	0x9c
 1402 02ca DF020000 		.4byte	0x2df
 1403 02ce 14       		.uleb128 0x14
 1404 02cf 7C020000 		.4byte	.LASF41
 1405 02d3 01       		.byte	0x1
 1406 02d4 5102     		.2byte	0x251
 1407 02d6 83000000 		.4byte	0x83
 1408 02da 8A020000 		.4byte	.LLST8
 1409 02de 00       		.byte	0
 1410 02df 0F       		.uleb128 0xf
 1411 02e0 91020000 		.4byte	.LASF42
 1412 02e4 01       		.byte	0x1
 1413 02e5 6602     		.2byte	0x266
 1414 02e7 00000000 		.4byte	.LFB10
 1415 02eb 18000000 		.4byte	.LFE10-.LFB10
 1416 02ef 01       		.uleb128 0x1
 1417 02f0 9C       		.byte	0x9c
 1418 02f1 06030000 		.4byte	0x306
 1419 02f5 14       		.uleb128 0x14
 1420 02f6 0C030000 		.4byte	.LASF43
 1421 02fa 01       		.byte	0x1
 1422 02fb 6602     		.2byte	0x266
 1423 02fd 83000000 		.4byte	0x83
 1424 0301 AB020000 		.4byte	.LLST9
 1425 0305 00       		.byte	0
 1426 0306 0F       		.uleb128 0xf
 1427 0307 95010000 		.4byte	.LASF44
 1428 030b 01       		.byte	0x1
 1429 030c 7E02     		.2byte	0x27e
 1430 030e 00000000 		.4byte	.LFB11
 1431 0312 10000000 		.4byte	.LFE11-.LFB11
 1432 0316 01       		.uleb128 0x1
 1433 0317 9C       		.byte	0x9c
 1434 0318 2D030000 		.4byte	0x32d
 1435 031c 14       		.uleb128 0x14
 1436 031d 7C010000 		.4byte	.LASF39
 1437 0321 01       		.byte	0x1
 1438 0322 7E02     		.2byte	0x27e
 1439 0324 83000000 		.4byte	0x83
 1440 0328 CC020000 		.4byte	.LLST10
 1441 032c 00       		.byte	0
 1442 032d 0F       		.uleb128 0xf
 1443 032e CC010000 		.4byte	.LASF45
 1444 0332 01       		.byte	0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 42


 1445 0333 9502     		.2byte	0x295
 1446 0335 00000000 		.4byte	.LFB12
 1447 0339 10000000 		.4byte	.LFE12-.LFB12
 1448 033d 01       		.uleb128 0x1
 1449 033e 9C       		.byte	0x9c
 1450 033f 54030000 		.4byte	0x354
 1451 0343 14       		.uleb128 0x14
 1452 0344 7C010000 		.4byte	.LASF39
 1453 0348 01       		.byte	0x1
 1454 0349 9502     		.2byte	0x295
 1455 034b 83000000 		.4byte	0x83
 1456 034f ED020000 		.4byte	.LLST11
 1457 0353 00       		.byte	0
 1458 0354 0F       		.uleb128 0xf
 1459 0355 B2030000 		.4byte	.LASF46
 1460 0359 01       		.byte	0x1
 1461 035a B102     		.2byte	0x2b1
 1462 035c 00000000 		.4byte	.LFB13
 1463 0360 1C000000 		.4byte	.LFE13-.LFB13
 1464 0364 01       		.uleb128 0x1
 1465 0365 9C       		.byte	0x9c
 1466 0366 9A030000 		.4byte	0x39a
 1467 036a 14       		.uleb128 0x14
 1468 036b 73030000 		.4byte	.LASF36
 1469 036f 01       		.byte	0x1
 1470 0370 B102     		.2byte	0x2b1
 1471 0372 83000000 		.4byte	0x83
 1472 0376 0E030000 		.4byte	.LLST12
 1473 037a 14       		.uleb128 0x14
 1474 037b 90030000 		.4byte	.LASF47
 1475 037f 01       		.byte	0x1
 1476 0380 B102     		.2byte	0x2b1
 1477 0382 8F000000 		.4byte	0x8f
 1478 0386 3A030000 		.4byte	.LLST13
 1479 038a 0B       		.uleb128 0xb
 1480 038b 10000000 		.4byte	.LVL54
 1481 038f 99050000 		.4byte	0x599
 1482 0393 0A       		.uleb128 0xa
 1483 0394 01       		.uleb128 0x1
 1484 0395 50       		.byte	0x50
 1485 0396 01       		.uleb128 0x1
 1486 0397 30       		.byte	0x30
 1487 0398 00       		.byte	0
 1488 0399 00       		.byte	0
 1489 039a 0F       		.uleb128 0xf
 1490 039b FA020000 		.4byte	.LASF48
 1491 039f 01       		.byte	0x1
 1492 03a0 D302     		.2byte	0x2d3
 1493 03a2 00000000 		.4byte	.LFB14
 1494 03a6 1C000000 		.4byte	.LFE14-.LFB14
 1495 03aa 01       		.uleb128 0x1
 1496 03ab 9C       		.byte	0x9c
 1497 03ac E0030000 		.4byte	0x3e0
 1498 03b0 14       		.uleb128 0x14
 1499 03b1 73030000 		.4byte	.LASF36
 1500 03b5 01       		.byte	0x1
 1501 03b6 D302     		.2byte	0x2d3
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 43


 1502 03b8 83000000 		.4byte	0x83
 1503 03bc 5B030000 		.4byte	.LLST14
 1504 03c0 14       		.uleb128 0x14
 1505 03c1 07000000 		.4byte	.LASF49
 1506 03c5 01       		.byte	0x1
 1507 03c6 D302     		.2byte	0x2d3
 1508 03c8 9B000000 		.4byte	0x9b
 1509 03cc 87030000 		.4byte	.LLST15
 1510 03d0 0B       		.uleb128 0xb
 1511 03d1 10000000 		.4byte	.LVL58
 1512 03d5 99050000 		.4byte	0x599
 1513 03d9 0A       		.uleb128 0xa
 1514 03da 01       		.uleb128 0x1
 1515 03db 50       		.byte	0x50
 1516 03dc 01       		.uleb128 0x1
 1517 03dd 30       		.byte	0x30
 1518 03de 00       		.byte	0
 1519 03df 00       		.byte	0
 1520 03e0 16       		.uleb128 0x16
 1521 03e1 16030000 		.4byte	.LASF50
 1522 03e5 01       		.byte	0x1
 1523 03e6 F402     		.2byte	0x2f4
 1524 03e8 8F000000 		.4byte	0x8f
 1525 03ec 00000000 		.4byte	.LFB15
 1526 03f0 5C000000 		.4byte	.LFE15-.LFB15
 1527 03f4 01       		.uleb128 0x1
 1528 03f5 9C       		.byte	0x9c
 1529 03f6 38040000 		.4byte	0x438
 1530 03fa 14       		.uleb128 0x14
 1531 03fb 73030000 		.4byte	.LASF36
 1532 03ff 01       		.byte	0x1
 1533 0400 F402     		.2byte	0x2f4
 1534 0402 83000000 		.4byte	0x83
 1535 0406 B7030000 		.4byte	.LLST16
 1536 040a 14       		.uleb128 0x14
 1537 040b 97030000 		.4byte	.LASF51
 1538 040f 01       		.byte	0x1
 1539 0410 F402     		.2byte	0x2f4
 1540 0412 8F000000 		.4byte	0x8f
 1541 0416 E3030000 		.4byte	.LLST17
 1542 041a 17       		.uleb128 0x17
 1543 041b 1D020000 		.4byte	.LASF52
 1544 041f 01       		.byte	0x1
 1545 0420 F602     		.2byte	0x2f6
 1546 0422 8F000000 		.4byte	0x8f
 1547 0426 01       		.uleb128 0x1
 1548 0427 50       		.byte	0x50
 1549 0428 0B       		.uleb128 0xb
 1550 0429 10000000 		.4byte	.LVL63
 1551 042d 99050000 		.4byte	0x599
 1552 0431 0A       		.uleb128 0xa
 1553 0432 01       		.uleb128 0x1
 1554 0433 50       		.byte	0x50
 1555 0434 01       		.uleb128 0x1
 1556 0435 30       		.byte	0x30
 1557 0436 00       		.byte	0
 1558 0437 00       		.byte	0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 44


 1559 0438 16       		.uleb128 0x16
 1560 0439 36010000 		.4byte	.LASF53
 1561 043d 01       		.byte	0x1
 1562 043e 2A03     		.2byte	0x32a
 1563 0440 9B000000 		.4byte	0x9b
 1564 0444 00000000 		.4byte	.LFB16
 1565 0448 40000000 		.4byte	.LFE16-.LFB16
 1566 044c 01       		.uleb128 0x1
 1567 044d 9C       		.byte	0x9c
 1568 044e 8E040000 		.4byte	0x48e
 1569 0452 14       		.uleb128 0x14
 1570 0453 73030000 		.4byte	.LASF36
 1571 0457 01       		.byte	0x1
 1572 0458 2A03     		.2byte	0x32a
 1573 045a 83000000 		.4byte	0x83
 1574 045e 0F040000 		.4byte	.LLST18
 1575 0462 14       		.uleb128 0x14
 1576 0463 97030000 		.4byte	.LASF51
 1577 0467 01       		.byte	0x1
 1578 0468 2A03     		.2byte	0x32a
 1579 046a 8F000000 		.4byte	0x8f
 1580 046e 3B040000 		.4byte	.LLST19
 1581 0472 18       		.uleb128 0x18
 1582 0473 B3010000 		.4byte	.LASF67
 1583 0477 01       		.byte	0x1
 1584 0478 2C03     		.2byte	0x32c
 1585 047a C1000000 		.4byte	0xc1
 1586 047e 0B       		.uleb128 0xb
 1587 047f 10000000 		.4byte	.LVL71
 1588 0483 99050000 		.4byte	0x599
 1589 0487 0A       		.uleb128 0xa
 1590 0488 01       		.uleb128 0x1
 1591 0489 50       		.byte	0x50
 1592 048a 01       		.uleb128 0x1
 1593 048b 30       		.byte	0x30
 1594 048c 00       		.byte	0
 1595 048d 00       		.byte	0
 1596 048e 16       		.uleb128 0x16
 1597 048f 16000000 		.4byte	.LASF54
 1598 0493 01       		.byte	0x1
 1599 0494 5703     		.2byte	0x357
 1600 0496 A7000000 		.4byte	0xa7
 1601 049a 00000000 		.4byte	.LFB17
 1602 049e 48000000 		.4byte	.LFE17-.LFB17
 1603 04a2 01       		.uleb128 0x1
 1604 04a3 9C       		.byte	0x9c
 1605 04a4 E6040000 		.4byte	0x4e6
 1606 04a8 14       		.uleb128 0x14
 1607 04a9 73030000 		.4byte	.LASF36
 1608 04ad 01       		.byte	0x1
 1609 04ae 5703     		.2byte	0x357
 1610 04b0 83000000 		.4byte	0x83
 1611 04b4 67040000 		.4byte	.LLST20
 1612 04b8 14       		.uleb128 0x14
 1613 04b9 97030000 		.4byte	.LASF51
 1614 04bd 01       		.byte	0x1
 1615 04be 5703     		.2byte	0x357
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 45


 1616 04c0 8F000000 		.4byte	0x8f
 1617 04c4 93040000 		.4byte	.LLST21
 1618 04c8 17       		.uleb128 0x17
 1619 04c9 DB010000 		.4byte	.LASF55
 1620 04cd 01       		.byte	0x1
 1621 04ce 5903     		.2byte	0x359
 1622 04d0 A7000000 		.4byte	0xa7
 1623 04d4 01       		.uleb128 0x1
 1624 04d5 50       		.byte	0x50
 1625 04d6 0B       		.uleb128 0xb
 1626 04d7 10000000 		.4byte	.LVL78
 1627 04db 99050000 		.4byte	0x599
 1628 04df 0A       		.uleb128 0xa
 1629 04e0 01       		.uleb128 0x1
 1630 04e1 50       		.byte	0x50
 1631 04e2 01       		.uleb128 0x1
 1632 04e3 30       		.byte	0x30
 1633 04e4 00       		.byte	0
 1634 04e5 00       		.byte	0
 1635 04e6 0C       		.uleb128 0xc
 1636 04e7 F6040000 		.4byte	0x4f6
 1637 04eb F6040000 		.4byte	0x4f6
 1638 04ef 0D       		.uleb128 0xd
 1639 04f0 EC000000 		.4byte	0xec
 1640 04f4 03       		.byte	0x3
 1641 04f5 00       		.byte	0
 1642 04f6 0E       		.uleb128 0xe
 1643 04f7 83000000 		.4byte	0x83
 1644 04fb 08       		.uleb128 0x8
 1645 04fc 7D030000 		.4byte	.LASF56
 1646 0500 01       		.byte	0x1
 1647 0501 21       		.byte	0x21
 1648 0502 0C050000 		.4byte	0x50c
 1649 0506 05       		.uleb128 0x5
 1650 0507 03       		.byte	0x3
 1651 0508 00000000 		.4byte	ADC_channelsConfig
 1652 050c 0E       		.uleb128 0xe
 1653 050d E6040000 		.4byte	0x4e6
 1654 0511 19       		.uleb128 0x19
 1655 0512 81010000 		.4byte	.LASF57
 1656 0516 01       		.byte	0x1
 1657 0517 18       		.byte	0x18
 1658 0518 6B000000 		.4byte	0x6b
 1659 051c 05       		.uleb128 0x5
 1660 051d 03       		.byte	0x3
 1661 051e 00000000 		.4byte	ADC_initVar
 1662 0522 0C       		.uleb128 0xc
 1663 0523 32050000 		.4byte	0x532
 1664 0527 32050000 		.4byte	0x532
 1665 052b 0D       		.uleb128 0xd
 1666 052c EC000000 		.4byte	0xec
 1667 0530 03       		.byte	0x3
 1668 0531 00       		.byte	0
 1669 0532 05       		.uleb128 0x5
 1670 0533 8F000000 		.4byte	0x8f
 1671 0537 19       		.uleb128 0x19
 1672 0538 4F030000 		.4byte	.LASF58
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 46


 1673 053c 01       		.byte	0x1
 1674 053d 19       		.byte	0x19
 1675 053e 48050000 		.4byte	0x548
 1676 0542 05       		.uleb128 0x5
 1677 0543 03       		.byte	0x3
 1678 0544 00000000 		.4byte	ADC_offset
 1679 0548 05       		.uleb128 0x5
 1680 0549 22050000 		.4byte	0x522
 1681 054d 0C       		.uleb128 0xc
 1682 054e 5D050000 		.4byte	0x55d
 1683 0552 5D050000 		.4byte	0x55d
 1684 0556 0D       		.uleb128 0xd
 1685 0557 EC000000 		.4byte	0xec
 1686 055b 03       		.byte	0x3
 1687 055c 00       		.byte	0
 1688 055d 05       		.uleb128 0x5
 1689 055e 9B000000 		.4byte	0x9b
 1690 0562 19       		.uleb128 0x19
 1691 0563 4A010000 		.4byte	.LASF59
 1692 0567 01       		.byte	0x1
 1693 0568 1A       		.byte	0x1a
 1694 0569 73050000 		.4byte	0x573
 1695 056d 05       		.uleb128 0x5
 1696 056e 03       		.byte	0x3
 1697 056f 00000000 		.4byte	ADC_countsPer10Volt
 1698 0573 05       		.uleb128 0x5
 1699 0574 4D050000 		.4byte	0x54d
 1700 0578 1A       		.uleb128 0x1a
 1701 0579 BC020000 		.4byte	.LASF60
 1702 057d BC020000 		.4byte	.LASF60
 1703 0581 03       		.byte	0x3
 1704 0582 C0       		.byte	0xc0
 1705 0583 1A       		.uleb128 0x1a
 1706 0584 FE010000 		.4byte	.LASF61
 1707 0588 FE010000 		.4byte	.LASF61
 1708 058c 03       		.byte	0x3
 1709 058d BD       		.byte	0xbd
 1710 058e 1A       		.uleb128 0x1a
 1711 058f 64010000 		.4byte	.LASF62
 1712 0593 64010000 		.4byte	.LASF62
 1713 0597 03       		.byte	0x3
 1714 0598 DA       		.byte	0xda
 1715 0599 1A       		.uleb128 0x1a
 1716 059a 3A030000 		.4byte	.LASF63
 1717 059e 3A030000 		.4byte	.LASF63
 1718 05a2 03       		.byte	0x3
 1719 05a3 E7       		.byte	0xe7
 1720 05a4 00       		.byte	0
 1721              		.section	.debug_abbrev,"",%progbits
 1722              	.Ldebug_abbrev0:
 1723 0000 01       		.uleb128 0x1
 1724 0001 11       		.uleb128 0x11
 1725 0002 01       		.byte	0x1
 1726 0003 25       		.uleb128 0x25
 1727 0004 0E       		.uleb128 0xe
 1728 0005 13       		.uleb128 0x13
 1729 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 47


 1730 0007 03       		.uleb128 0x3
 1731 0008 0E       		.uleb128 0xe
 1732 0009 1B       		.uleb128 0x1b
 1733 000a 0E       		.uleb128 0xe
 1734 000b 55       		.uleb128 0x55
 1735 000c 17       		.uleb128 0x17
 1736 000d 11       		.uleb128 0x11
 1737 000e 01       		.uleb128 0x1
 1738 000f 10       		.uleb128 0x10
 1739 0010 17       		.uleb128 0x17
 1740 0011 00       		.byte	0
 1741 0012 00       		.byte	0
 1742 0013 02       		.uleb128 0x2
 1743 0014 24       		.uleb128 0x24
 1744 0015 00       		.byte	0
 1745 0016 0B       		.uleb128 0xb
 1746 0017 0B       		.uleb128 0xb
 1747 0018 3E       		.uleb128 0x3e
 1748 0019 0B       		.uleb128 0xb
 1749 001a 03       		.uleb128 0x3
 1750 001b 0E       		.uleb128 0xe
 1751 001c 00       		.byte	0
 1752 001d 00       		.byte	0
 1753 001e 03       		.uleb128 0x3
 1754 001f 24       		.uleb128 0x24
 1755 0020 00       		.byte	0
 1756 0021 0B       		.uleb128 0xb
 1757 0022 0B       		.uleb128 0xb
 1758 0023 3E       		.uleb128 0x3e
 1759 0024 0B       		.uleb128 0xb
 1760 0025 03       		.uleb128 0x3
 1761 0026 08       		.uleb128 0x8
 1762 0027 00       		.byte	0
 1763 0028 00       		.byte	0
 1764 0029 04       		.uleb128 0x4
 1765 002a 16       		.uleb128 0x16
 1766 002b 00       		.byte	0
 1767 002c 03       		.uleb128 0x3
 1768 002d 0E       		.uleb128 0xe
 1769 002e 3A       		.uleb128 0x3a
 1770 002f 0B       		.uleb128 0xb
 1771 0030 3B       		.uleb128 0x3b
 1772 0031 05       		.uleb128 0x5
 1773 0032 49       		.uleb128 0x49
 1774 0033 13       		.uleb128 0x13
 1775 0034 00       		.byte	0
 1776 0035 00       		.byte	0
 1777 0036 05       		.uleb128 0x5
 1778 0037 35       		.uleb128 0x35
 1779 0038 00       		.byte	0
 1780 0039 49       		.uleb128 0x49
 1781 003a 13       		.uleb128 0x13
 1782 003b 00       		.byte	0
 1783 003c 00       		.byte	0
 1784 003d 06       		.uleb128 0x6
 1785 003e 2E       		.uleb128 0x2e
 1786 003f 01       		.byte	0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 48


 1787 0040 3F       		.uleb128 0x3f
 1788 0041 19       		.uleb128 0x19
 1789 0042 03       		.uleb128 0x3
 1790 0043 0E       		.uleb128 0xe
 1791 0044 3A       		.uleb128 0x3a
 1792 0045 0B       		.uleb128 0xb
 1793 0046 3B       		.uleb128 0x3b
 1794 0047 0B       		.uleb128 0xb
 1795 0048 27       		.uleb128 0x27
 1796 0049 19       		.uleb128 0x19
 1797 004a 11       		.uleb128 0x11
 1798 004b 01       		.uleb128 0x1
 1799 004c 12       		.uleb128 0x12
 1800 004d 06       		.uleb128 0x6
 1801 004e 40       		.uleb128 0x40
 1802 004f 18       		.uleb128 0x18
 1803 0050 9642     		.uleb128 0x2116
 1804 0052 19       		.uleb128 0x19
 1805 0053 01       		.uleb128 0x1
 1806 0054 13       		.uleb128 0x13
 1807 0055 00       		.byte	0
 1808 0056 00       		.byte	0
 1809 0057 07       		.uleb128 0x7
 1810 0058 34       		.uleb128 0x34
 1811 0059 00       		.byte	0
 1812 005a 03       		.uleb128 0x3
 1813 005b 0E       		.uleb128 0xe
 1814 005c 3A       		.uleb128 0x3a
 1815 005d 0B       		.uleb128 0xb
 1816 005e 3B       		.uleb128 0x3b
 1817 005f 0B       		.uleb128 0xb
 1818 0060 49       		.uleb128 0x49
 1819 0061 13       		.uleb128 0x13
 1820 0062 02       		.uleb128 0x2
 1821 0063 17       		.uleb128 0x17
 1822 0064 00       		.byte	0
 1823 0065 00       		.byte	0
 1824 0066 08       		.uleb128 0x8
 1825 0067 34       		.uleb128 0x34
 1826 0068 00       		.byte	0
 1827 0069 03       		.uleb128 0x3
 1828 006a 0E       		.uleb128 0xe
 1829 006b 3A       		.uleb128 0x3a
 1830 006c 0B       		.uleb128 0xb
 1831 006d 3B       		.uleb128 0x3b
 1832 006e 0B       		.uleb128 0xb
 1833 006f 49       		.uleb128 0x49
 1834 0070 13       		.uleb128 0x13
 1835 0071 02       		.uleb128 0x2
 1836 0072 18       		.uleb128 0x18
 1837 0073 00       		.byte	0
 1838 0074 00       		.byte	0
 1839 0075 09       		.uleb128 0x9
 1840 0076 898201   		.uleb128 0x4109
 1841 0079 01       		.byte	0x1
 1842 007a 11       		.uleb128 0x11
 1843 007b 01       		.uleb128 0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 49


 1844 007c 31       		.uleb128 0x31
 1845 007d 13       		.uleb128 0x13
 1846 007e 01       		.uleb128 0x1
 1847 007f 13       		.uleb128 0x13
 1848 0080 00       		.byte	0
 1849 0081 00       		.byte	0
 1850 0082 0A       		.uleb128 0xa
 1851 0083 8A8201   		.uleb128 0x410a
 1852 0086 00       		.byte	0
 1853 0087 02       		.uleb128 0x2
 1854 0088 18       		.uleb128 0x18
 1855 0089 9142     		.uleb128 0x2111
 1856 008b 18       		.uleb128 0x18
 1857 008c 00       		.byte	0
 1858 008d 00       		.byte	0
 1859 008e 0B       		.uleb128 0xb
 1860 008f 898201   		.uleb128 0x4109
 1861 0092 01       		.byte	0x1
 1862 0093 11       		.uleb128 0x11
 1863 0094 01       		.uleb128 0x1
 1864 0095 31       		.uleb128 0x31
 1865 0096 13       		.uleb128 0x13
 1866 0097 00       		.byte	0
 1867 0098 00       		.byte	0
 1868 0099 0C       		.uleb128 0xc
 1869 009a 01       		.uleb128 0x1
 1870 009b 01       		.byte	0x1
 1871 009c 49       		.uleb128 0x49
 1872 009d 13       		.uleb128 0x13
 1873 009e 01       		.uleb128 0x1
 1874 009f 13       		.uleb128 0x13
 1875 00a0 00       		.byte	0
 1876 00a1 00       		.byte	0
 1877 00a2 0D       		.uleb128 0xd
 1878 00a3 21       		.uleb128 0x21
 1879 00a4 00       		.byte	0
 1880 00a5 49       		.uleb128 0x49
 1881 00a6 13       		.uleb128 0x13
 1882 00a7 2F       		.uleb128 0x2f
 1883 00a8 0B       		.uleb128 0xb
 1884 00a9 00       		.byte	0
 1885 00aa 00       		.byte	0
 1886 00ab 0E       		.uleb128 0xe
 1887 00ac 26       		.uleb128 0x26
 1888 00ad 00       		.byte	0
 1889 00ae 49       		.uleb128 0x49
 1890 00af 13       		.uleb128 0x13
 1891 00b0 00       		.byte	0
 1892 00b1 00       		.byte	0
 1893 00b2 0F       		.uleb128 0xf
 1894 00b3 2E       		.uleb128 0x2e
 1895 00b4 01       		.byte	0x1
 1896 00b5 3F       		.uleb128 0x3f
 1897 00b6 19       		.uleb128 0x19
 1898 00b7 03       		.uleb128 0x3
 1899 00b8 0E       		.uleb128 0xe
 1900 00b9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 50


 1901 00ba 0B       		.uleb128 0xb
 1902 00bb 3B       		.uleb128 0x3b
 1903 00bc 05       		.uleb128 0x5
 1904 00bd 27       		.uleb128 0x27
 1905 00be 19       		.uleb128 0x19
 1906 00bf 11       		.uleb128 0x11
 1907 00c0 01       		.uleb128 0x1
 1908 00c1 12       		.uleb128 0x12
 1909 00c2 06       		.uleb128 0x6
 1910 00c3 40       		.uleb128 0x40
 1911 00c4 18       		.uleb128 0x18
 1912 00c5 9742     		.uleb128 0x2117
 1913 00c7 19       		.uleb128 0x19
 1914 00c8 01       		.uleb128 0x1
 1915 00c9 13       		.uleb128 0x13
 1916 00ca 00       		.byte	0
 1917 00cb 00       		.byte	0
 1918 00cc 10       		.uleb128 0x10
 1919 00cd 2E       		.uleb128 0x2e
 1920 00ce 01       		.byte	0x1
 1921 00cf 3F       		.uleb128 0x3f
 1922 00d0 19       		.uleb128 0x19
 1923 00d1 03       		.uleb128 0x3
 1924 00d2 0E       		.uleb128 0xe
 1925 00d3 3A       		.uleb128 0x3a
 1926 00d4 0B       		.uleb128 0xb
 1927 00d5 3B       		.uleb128 0x3b
 1928 00d6 0B       		.uleb128 0xb
 1929 00d7 27       		.uleb128 0x27
 1930 00d8 19       		.uleb128 0x19
 1931 00d9 11       		.uleb128 0x11
 1932 00da 01       		.uleb128 0x1
 1933 00db 12       		.uleb128 0x12
 1934 00dc 06       		.uleb128 0x6
 1935 00dd 40       		.uleb128 0x40
 1936 00de 18       		.uleb128 0x18
 1937 00df 9742     		.uleb128 0x2117
 1938 00e1 19       		.uleb128 0x19
 1939 00e2 01       		.uleb128 0x1
 1940 00e3 13       		.uleb128 0x13
 1941 00e4 00       		.byte	0
 1942 00e5 00       		.byte	0
 1943 00e6 11       		.uleb128 0x11
 1944 00e7 898201   		.uleb128 0x4109
 1945 00ea 00       		.byte	0
 1946 00eb 11       		.uleb128 0x11
 1947 00ec 01       		.uleb128 0x1
 1948 00ed 31       		.uleb128 0x31
 1949 00ee 13       		.uleb128 0x13
 1950 00ef 00       		.byte	0
 1951 00f0 00       		.byte	0
 1952 00f1 12       		.uleb128 0x12
 1953 00f2 2E       		.uleb128 0x2e
 1954 00f3 00       		.byte	0
 1955 00f4 3F       		.uleb128 0x3f
 1956 00f5 19       		.uleb128 0x19
 1957 00f6 03       		.uleb128 0x3
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 51


 1958 00f7 0E       		.uleb128 0xe
 1959 00f8 3A       		.uleb128 0x3a
 1960 00f9 0B       		.uleb128 0xb
 1961 00fa 3B       		.uleb128 0x3b
 1962 00fb 05       		.uleb128 0x5
 1963 00fc 27       		.uleb128 0x27
 1964 00fd 19       		.uleb128 0x19
 1965 00fe 11       		.uleb128 0x11
 1966 00ff 01       		.uleb128 0x1
 1967 0100 12       		.uleb128 0x12
 1968 0101 06       		.uleb128 0x6
 1969 0102 40       		.uleb128 0x40
 1970 0103 18       		.uleb128 0x18
 1971 0104 9742     		.uleb128 0x2117
 1972 0106 19       		.uleb128 0x19
 1973 0107 00       		.byte	0
 1974 0108 00       		.byte	0
 1975 0109 13       		.uleb128 0x13
 1976 010a 2E       		.uleb128 0x2e
 1977 010b 01       		.byte	0x1
 1978 010c 3F       		.uleb128 0x3f
 1979 010d 19       		.uleb128 0x19
 1980 010e 03       		.uleb128 0x3
 1981 010f 0E       		.uleb128 0xe
 1982 0110 3A       		.uleb128 0x3a
 1983 0111 0B       		.uleb128 0xb
 1984 0112 3B       		.uleb128 0x3b
 1985 0113 05       		.uleb128 0x5
 1986 0114 27       		.uleb128 0x27
 1987 0115 19       		.uleb128 0x19
 1988 0116 49       		.uleb128 0x49
 1989 0117 13       		.uleb128 0x13
 1990 0118 11       		.uleb128 0x11
 1991 0119 01       		.uleb128 0x1
 1992 011a 12       		.uleb128 0x12
 1993 011b 06       		.uleb128 0x6
 1994 011c 40       		.uleb128 0x40
 1995 011d 18       		.uleb128 0x18
 1996 011e 9742     		.uleb128 0x2117
 1997 0120 19       		.uleb128 0x19
 1998 0121 01       		.uleb128 0x1
 1999 0122 13       		.uleb128 0x13
 2000 0123 00       		.byte	0
 2001 0124 00       		.byte	0
 2002 0125 14       		.uleb128 0x14
 2003 0126 05       		.uleb128 0x5
 2004 0127 00       		.byte	0
 2005 0128 03       		.uleb128 0x3
 2006 0129 0E       		.uleb128 0xe
 2007 012a 3A       		.uleb128 0x3a
 2008 012b 0B       		.uleb128 0xb
 2009 012c 3B       		.uleb128 0x3b
 2010 012d 05       		.uleb128 0x5
 2011 012e 49       		.uleb128 0x49
 2012 012f 13       		.uleb128 0x13
 2013 0130 02       		.uleb128 0x2
 2014 0131 17       		.uleb128 0x17
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 52


 2015 0132 00       		.byte	0
 2016 0133 00       		.byte	0
 2017 0134 15       		.uleb128 0x15
 2018 0135 34       		.uleb128 0x34
 2019 0136 00       		.byte	0
 2020 0137 03       		.uleb128 0x3
 2021 0138 0E       		.uleb128 0xe
 2022 0139 3A       		.uleb128 0x3a
 2023 013a 0B       		.uleb128 0xb
 2024 013b 3B       		.uleb128 0x3b
 2025 013c 05       		.uleb128 0x5
 2026 013d 49       		.uleb128 0x49
 2027 013e 13       		.uleb128 0x13
 2028 013f 02       		.uleb128 0x2
 2029 0140 17       		.uleb128 0x17
 2030 0141 00       		.byte	0
 2031 0142 00       		.byte	0
 2032 0143 16       		.uleb128 0x16
 2033 0144 2E       		.uleb128 0x2e
 2034 0145 01       		.byte	0x1
 2035 0146 3F       		.uleb128 0x3f
 2036 0147 19       		.uleb128 0x19
 2037 0148 03       		.uleb128 0x3
 2038 0149 0E       		.uleb128 0xe
 2039 014a 3A       		.uleb128 0x3a
 2040 014b 0B       		.uleb128 0xb
 2041 014c 3B       		.uleb128 0x3b
 2042 014d 05       		.uleb128 0x5
 2043 014e 27       		.uleb128 0x27
 2044 014f 19       		.uleb128 0x19
 2045 0150 49       		.uleb128 0x49
 2046 0151 13       		.uleb128 0x13
 2047 0152 11       		.uleb128 0x11
 2048 0153 01       		.uleb128 0x1
 2049 0154 12       		.uleb128 0x12
 2050 0155 06       		.uleb128 0x6
 2051 0156 40       		.uleb128 0x40
 2052 0157 18       		.uleb128 0x18
 2053 0158 9642     		.uleb128 0x2116
 2054 015a 19       		.uleb128 0x19
 2055 015b 01       		.uleb128 0x1
 2056 015c 13       		.uleb128 0x13
 2057 015d 00       		.byte	0
 2058 015e 00       		.byte	0
 2059 015f 17       		.uleb128 0x17
 2060 0160 34       		.uleb128 0x34
 2061 0161 00       		.byte	0
 2062 0162 03       		.uleb128 0x3
 2063 0163 0E       		.uleb128 0xe
 2064 0164 3A       		.uleb128 0x3a
 2065 0165 0B       		.uleb128 0xb
 2066 0166 3B       		.uleb128 0x3b
 2067 0167 05       		.uleb128 0x5
 2068 0168 49       		.uleb128 0x49
 2069 0169 13       		.uleb128 0x13
 2070 016a 02       		.uleb128 0x2
 2071 016b 18       		.uleb128 0x18
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 53


 2072 016c 00       		.byte	0
 2073 016d 00       		.byte	0
 2074 016e 18       		.uleb128 0x18
 2075 016f 34       		.uleb128 0x34
 2076 0170 00       		.byte	0
 2077 0171 03       		.uleb128 0x3
 2078 0172 0E       		.uleb128 0xe
 2079 0173 3A       		.uleb128 0x3a
 2080 0174 0B       		.uleb128 0xb
 2081 0175 3B       		.uleb128 0x3b
 2082 0176 05       		.uleb128 0x5
 2083 0177 49       		.uleb128 0x49
 2084 0178 13       		.uleb128 0x13
 2085 0179 00       		.byte	0
 2086 017a 00       		.byte	0
 2087 017b 19       		.uleb128 0x19
 2088 017c 34       		.uleb128 0x34
 2089 017d 00       		.byte	0
 2090 017e 03       		.uleb128 0x3
 2091 017f 0E       		.uleb128 0xe
 2092 0180 3A       		.uleb128 0x3a
 2093 0181 0B       		.uleb128 0xb
 2094 0182 3B       		.uleb128 0x3b
 2095 0183 0B       		.uleb128 0xb
 2096 0184 49       		.uleb128 0x49
 2097 0185 13       		.uleb128 0x13
 2098 0186 3F       		.uleb128 0x3f
 2099 0187 19       		.uleb128 0x19
 2100 0188 02       		.uleb128 0x2
 2101 0189 18       		.uleb128 0x18
 2102 018a 00       		.byte	0
 2103 018b 00       		.byte	0
 2104 018c 1A       		.uleb128 0x1a
 2105 018d 2E       		.uleb128 0x2e
 2106 018e 00       		.byte	0
 2107 018f 3F       		.uleb128 0x3f
 2108 0190 19       		.uleb128 0x19
 2109 0191 3C       		.uleb128 0x3c
 2110 0192 19       		.uleb128 0x19
 2111 0193 6E       		.uleb128 0x6e
 2112 0194 0E       		.uleb128 0xe
 2113 0195 03       		.uleb128 0x3
 2114 0196 0E       		.uleb128 0xe
 2115 0197 3A       		.uleb128 0x3a
 2116 0198 0B       		.uleb128 0xb
 2117 0199 3B       		.uleb128 0x3b
 2118 019a 0B       		.uleb128 0xb
 2119 019b 00       		.byte	0
 2120 019c 00       		.byte	0
 2121 019d 00       		.byte	0
 2122              		.section	.debug_loc,"",%progbits
 2123              	.Ldebug_loc0:
 2124              	.LLST0:
 2125 0000 7E000000 		.4byte	.LVL5
 2126 0004 82000000 		.4byte	.LVL6
 2127 0008 0200     		.2byte	0x2
 2128 000a 30       		.byte	0x30
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 54


 2129 000b 9F       		.byte	0x9f
 2130 000c 82000000 		.4byte	.LVL6
 2131 0010 12010000 		.4byte	.LVL23
 2132 0014 0100     		.2byte	0x1
 2133 0016 54       		.byte	0x54
 2134 0017 00000000 		.4byte	0
 2135 001b 00000000 		.4byte	0
 2136              	.LLST1:
 2137 001f 76000000 		.4byte	.LVL2
 2138 0023 7A000000 		.4byte	.LVL3
 2139 0027 0100     		.2byte	0x1
 2140 0029 50       		.byte	0x50
 2141 002a 7A000000 		.4byte	.LVL3
 2142 002e 7C000000 		.4byte	.LVL4
 2143 0032 0100     		.2byte	0x1
 2144 0034 52       		.byte	0x52
 2145 0035 7C000000 		.4byte	.LVL4
 2146 0039 82000000 		.4byte	.LVL6
 2147 003d 0100     		.2byte	0x1
 2148 003f 53       		.byte	0x53
 2149 0040 8E000000 		.4byte	.LVL7
 2150 0044 A0000000 		.4byte	.LVL9
 2151 0048 0100     		.2byte	0x1
 2152 004a 53       		.byte	0x53
 2153 004b A0000000 		.4byte	.LVL9
 2154 004f A4000000 		.4byte	.LVL10
 2155 0053 0200     		.2byte	0x2
 2156 0055 72       		.byte	0x72
 2157 0056 00       		.sleb128 0
 2158 0057 A4000000 		.4byte	.LVL10
 2159 005b B0000000 		.4byte	.LVL11
 2160 005f 0700     		.2byte	0x7
 2161 0061 74       		.byte	0x74
 2162 0062 00       		.sleb128 0
 2163 0063 32       		.byte	0x32
 2164 0064 24       		.byte	0x24
 2165 0065 7C       		.byte	0x7c
 2166 0066 00       		.sleb128 0
 2167 0067 22       		.byte	0x22
 2168 0068 B0000000 		.4byte	.LVL11
 2169 006c B4000000 		.4byte	.LVL12
 2170 0070 1500     		.2byte	0x15
 2171 0072 70       		.byte	0x70
 2172 0073 00       		.sleb128 0
 2173 0074 0A       		.byte	0xa
 2174 0075 0037     		.2byte	0x3700
 2175 0077 1A       		.byte	0x1a
 2176 0078 74       		.byte	0x74
 2177 0079 00       		.sleb128 0
 2178 007a 03       		.byte	0x3
 2179 007b 10000000 		.4byte	.LANCHOR0+16
 2180 007f 22       		.byte	0x22
 2181 0080 94       		.byte	0x94
 2182 0081 01       		.byte	0x1
 2183 0082 08       		.byte	0x8
 2184 0083 FF       		.byte	0xff
 2185 0084 1A       		.byte	0x1a
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 55


 2186 0085 21       		.byte	0x21
 2187 0086 9F       		.byte	0x9f
 2188 0087 B4000000 		.4byte	.LVL12
 2189 008b BE000000 		.4byte	.LVL13
 2190 008f 1400     		.2byte	0x14
 2191 0091 70       		.byte	0x70
 2192 0092 00       		.sleb128 0
 2193 0093 0A       		.byte	0xa
 2194 0094 0037     		.2byte	0x3700
 2195 0096 1A       		.byte	0x1a
 2196 0097 72       		.byte	0x72
 2197 0098 00       		.sleb128 0
 2198 0099 74       		.byte	0x74
 2199 009a 00       		.sleb128 0
 2200 009b 22       		.byte	0x22
 2201 009c 23       		.byte	0x23
 2202 009d 10       		.uleb128 0x10
 2203 009e 94       		.byte	0x94
 2204 009f 01       		.byte	0x1
 2205 00a0 08       		.byte	0x8
 2206 00a1 FF       		.byte	0xff
 2207 00a2 1A       		.byte	0x1a
 2208 00a3 21       		.byte	0x21
 2209 00a4 9F       		.byte	0x9f
 2210 00a5 BE000000 		.4byte	.LVL13
 2211 00a9 CE000000 		.4byte	.LVL14
 2212 00ad 1500     		.2byte	0x15
 2213 00af 70       		.byte	0x70
 2214 00b0 00       		.sleb128 0
 2215 00b1 0A       		.byte	0xa
 2216 00b2 0037     		.2byte	0x3700
 2217 00b4 1A       		.byte	0x1a
 2218 00b5 74       		.byte	0x74
 2219 00b6 00       		.sleb128 0
 2220 00b7 03       		.byte	0x3
 2221 00b8 10000000 		.4byte	.LANCHOR0+16
 2222 00bc 22       		.byte	0x22
 2223 00bd 94       		.byte	0x94
 2224 00be 01       		.byte	0x1
 2225 00bf 08       		.byte	0x8
 2226 00c0 FF       		.byte	0xff
 2227 00c1 1A       		.byte	0x1a
 2228 00c2 21       		.byte	0x21
 2229 00c3 9F       		.byte	0x9f
 2230 00c4 CE000000 		.4byte	.LVL14
 2231 00c8 D4000000 		.4byte	.LVL15
 2232 00cc 1400     		.2byte	0x14
 2233 00ce 70       		.byte	0x70
 2234 00cf 00       		.sleb128 0
 2235 00d0 0A       		.byte	0xa
 2236 00d1 0037     		.2byte	0x3700
 2237 00d3 1A       		.byte	0x1a
 2238 00d4 72       		.byte	0x72
 2239 00d5 00       		.sleb128 0
 2240 00d6 74       		.byte	0x74
 2241 00d7 00       		.sleb128 0
 2242 00d8 22       		.byte	0x22
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 56


 2243 00d9 23       		.byte	0x23
 2244 00da 10       		.uleb128 0x10
 2245 00db 94       		.byte	0x94
 2246 00dc 01       		.byte	0x1
 2247 00dd 08       		.byte	0x8
 2248 00de FF       		.byte	0xff
 2249 00df 1A       		.byte	0x1a
 2250 00e0 21       		.byte	0x21
 2251 00e1 9F       		.byte	0x9f
 2252 00e2 D4000000 		.4byte	.LVL15
 2253 00e6 D6000000 		.4byte	.LVL16
 2254 00ea 1500     		.2byte	0x15
 2255 00ec 70       		.byte	0x70
 2256 00ed 00       		.sleb128 0
 2257 00ee 0A       		.byte	0xa
 2258 00ef 0037     		.2byte	0x3700
 2259 00f1 1A       		.byte	0x1a
 2260 00f2 74       		.byte	0x74
 2261 00f3 00       		.sleb128 0
 2262 00f4 03       		.byte	0x3
 2263 00f5 10000000 		.4byte	.LANCHOR0+16
 2264 00f9 22       		.byte	0x22
 2265 00fa 94       		.byte	0x94
 2266 00fb 01       		.byte	0x1
 2267 00fc 08       		.byte	0x8
 2268 00fd FF       		.byte	0xff
 2269 00fe 1A       		.byte	0x1a
 2270 00ff 21       		.byte	0x21
 2271 0100 9F       		.byte	0x9f
 2272 0101 D6000000 		.4byte	.LVL16
 2273 0105 DA000000 		.4byte	.LVL17
 2274 0109 1E00     		.2byte	0x1e
 2275 010b 74       		.byte	0x74
 2276 010c 00       		.sleb128 0
 2277 010d 32       		.byte	0x32
 2278 010e 24       		.byte	0x24
 2279 010f 03       		.byte	0x3
 2280 0110 00000000 		.4byte	.LANCHOR0
 2281 0114 22       		.byte	0x22
 2282 0115 06       		.byte	0x6
 2283 0116 0A       		.byte	0xa
 2284 0117 0037     		.2byte	0x3700
 2285 0119 1A       		.byte	0x1a
 2286 011a 74       		.byte	0x74
 2287 011b 00       		.sleb128 0
 2288 011c 03       		.byte	0x3
 2289 011d 10000000 		.4byte	.LANCHOR0+16
 2290 0121 22       		.byte	0x22
 2291 0122 94       		.byte	0x94
 2292 0123 01       		.byte	0x1
 2293 0124 08       		.byte	0x8
 2294 0125 FF       		.byte	0xff
 2295 0126 1A       		.byte	0x1a
 2296 0127 21       		.byte	0x21
 2297 0128 9F       		.byte	0x9f
 2298 0129 DA000000 		.4byte	.LVL17
 2299 012d DC000000 		.4byte	.LVL18
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 57


 2300 0131 1500     		.2byte	0x15
 2301 0133 70       		.byte	0x70
 2302 0134 00       		.sleb128 0
 2303 0135 0A       		.byte	0xa
 2304 0136 0037     		.2byte	0x3700
 2305 0138 1A       		.byte	0x1a
 2306 0139 74       		.byte	0x74
 2307 013a 00       		.sleb128 0
 2308 013b 03       		.byte	0x3
 2309 013c 10000000 		.4byte	.LANCHOR0+16
 2310 0140 22       		.byte	0x22
 2311 0141 94       		.byte	0x94
 2312 0142 01       		.byte	0x1
 2313 0143 08       		.byte	0x8
 2314 0144 FF       		.byte	0xff
 2315 0145 1A       		.byte	0x1a
 2316 0146 21       		.byte	0x21
 2317 0147 9F       		.byte	0x9f
 2318 0148 DC000000 		.4byte	.LVL18
 2319 014c 0E010000 		.4byte	.LVL22
 2320 0150 1E00     		.2byte	0x1e
 2321 0152 74       		.byte	0x74
 2322 0153 00       		.sleb128 0
 2323 0154 32       		.byte	0x32
 2324 0155 24       		.byte	0x24
 2325 0156 03       		.byte	0x3
 2326 0157 00000000 		.4byte	.LANCHOR0
 2327 015b 22       		.byte	0x22
 2328 015c 06       		.byte	0x6
 2329 015d 0A       		.byte	0xa
 2330 015e 0037     		.2byte	0x3700
 2331 0160 1A       		.byte	0x1a
 2332 0161 74       		.byte	0x74
 2333 0162 00       		.sleb128 0
 2334 0163 03       		.byte	0x3
 2335 0164 10000000 		.4byte	.LANCHOR0+16
 2336 0168 22       		.byte	0x22
 2337 0169 94       		.byte	0x94
 2338 016a 01       		.byte	0x1
 2339 016b 08       		.byte	0x8
 2340 016c FF       		.byte	0xff
 2341 016d 1A       		.byte	0x1a
 2342 016e 21       		.byte	0x21
 2343 016f 9F       		.byte	0x9f
 2344 0170 00000000 		.4byte	0
 2345 0174 00000000 		.4byte	0
 2346              	.LLST2:
 2347 0178 DE000000 		.4byte	.LVL19
 2348 017c F8000000 		.4byte	.LVL20
 2349 0180 0100     		.2byte	0x1
 2350 0182 50       		.byte	0x50
 2351 0183 00000000 		.4byte	0
 2352 0187 00000000 		.4byte	0
 2353              	.LLST3:
 2354 018b 00000000 		.4byte	.LVL27
 2355 018f 06000000 		.4byte	.LVL29
 2356 0193 0100     		.2byte	0x1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 58


 2357 0195 50       		.byte	0x50
 2358 0196 06000000 		.4byte	.LVL29
 2359 019a 1A000000 		.4byte	.LVL31
 2360 019e 0100     		.2byte	0x1
 2361 01a0 52       		.byte	0x52
 2362 01a1 1A000000 		.4byte	.LVL31
 2363 01a5 20000000 		.4byte	.LVL32
 2364 01a9 0400     		.2byte	0x4
 2365 01ab F3       		.byte	0xf3
 2366 01ac 01       		.uleb128 0x1
 2367 01ad 50       		.byte	0x50
 2368 01ae 9F       		.byte	0x9f
 2369 01af 20000000 		.4byte	.LVL32
 2370 01b3 22000000 		.4byte	.LVL33
 2371 01b7 0100     		.2byte	0x1
 2372 01b9 50       		.byte	0x50
 2373 01ba 22000000 		.4byte	.LVL33
 2374 01be 28000000 		.4byte	.LFE6
 2375 01c2 0400     		.2byte	0x4
 2376 01c4 F3       		.byte	0xf3
 2377 01c5 01       		.uleb128 0x1
 2378 01c6 50       		.byte	0x50
 2379 01c7 9F       		.byte	0x9f
 2380 01c8 00000000 		.4byte	0
 2381 01cc 00000000 		.4byte	0
 2382              	.LLST4:
 2383 01d0 02000000 		.4byte	.LVL28
 2384 01d4 06000000 		.4byte	.LVL29
 2385 01d8 0200     		.2byte	0x2
 2386 01da 30       		.byte	0x30
 2387 01db 9F       		.byte	0x9f
 2388 01dc 0E000000 		.4byte	.LVL30
 2389 01e0 20000000 		.4byte	.LVL32
 2390 01e4 0100     		.2byte	0x1
 2391 01e6 50       		.byte	0x50
 2392 01e7 20000000 		.4byte	.LVL32
 2393 01eb 22000000 		.4byte	.LVL33
 2394 01ef 0200     		.2byte	0x2
 2395 01f1 30       		.byte	0x30
 2396 01f2 9F       		.byte	0x9f
 2397 01f3 22000000 		.4byte	.LVL33
 2398 01f7 28000000 		.4byte	.LFE6
 2399 01fb 0100     		.2byte	0x1
 2400 01fd 50       		.byte	0x50
 2401 01fe 00000000 		.4byte	0
 2402 0202 00000000 		.4byte	0
 2403              	.LLST5:
 2404 0206 00000000 		.4byte	.LVL34
 2405 020a 0A000000 		.4byte	.LVL35
 2406 020e 0100     		.2byte	0x1
 2407 0210 50       		.byte	0x50
 2408 0211 0A000000 		.4byte	.LVL35
 2409 0215 14000000 		.4byte	.LVL37
 2410 0219 0100     		.2byte	0x1
 2411 021b 54       		.byte	0x54
 2412 021c 14000000 		.4byte	.LVL37
 2413 0220 22000000 		.4byte	.LVL39
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 59


 2414 0224 0400     		.2byte	0x4
 2415 0226 F3       		.byte	0xf3
 2416 0227 01       		.uleb128 0x1
 2417 0228 50       		.byte	0x50
 2418 0229 9F       		.byte	0x9f
 2419 022a 22000000 		.4byte	.LVL39
 2420 022e 24000000 		.4byte	.LVL40
 2421 0232 0100     		.2byte	0x1
 2422 0234 54       		.byte	0x54
 2423 0235 24000000 		.4byte	.LVL40
 2424 0239 2C000000 		.4byte	.LFE7
 2425 023d 0400     		.2byte	0x4
 2426 023f F3       		.byte	0xf3
 2427 0240 01       		.uleb128 0x1
 2428 0241 50       		.byte	0x50
 2429 0242 9F       		.byte	0x9f
 2430 0243 00000000 		.4byte	0
 2431 0247 00000000 		.4byte	0
 2432              	.LLST6:
 2433 024b 20000000 		.4byte	.LVL38
 2434 024f 22000000 		.4byte	.LVL39
 2435 0253 0100     		.2byte	0x1
 2436 0255 50       		.byte	0x50
 2437 0256 24000000 		.4byte	.LVL40
 2438 025a 26000000 		.4byte	.LVL41
 2439 025e 0100     		.2byte	0x1
 2440 0260 50       		.byte	0x50
 2441 0261 00000000 		.4byte	0
 2442 0265 00000000 		.4byte	0
 2443              	.LLST7:
 2444 0269 00000000 		.4byte	.LVL42
 2445 026d 04000000 		.4byte	.LVL43
 2446 0271 0100     		.2byte	0x1
 2447 0273 50       		.byte	0x50
 2448 0274 04000000 		.4byte	.LVL43
 2449 0278 10000000 		.4byte	.LFE8
 2450 027c 0400     		.2byte	0x4
 2451 027e F3       		.byte	0xf3
 2452 027f 01       		.uleb128 0x1
 2453 0280 50       		.byte	0x50
 2454 0281 9F       		.byte	0x9f
 2455 0282 00000000 		.4byte	0
 2456 0286 00000000 		.4byte	0
 2457              	.LLST8:
 2458 028a 00000000 		.4byte	.LVL44
 2459 028e 0E000000 		.4byte	.LVL45
 2460 0292 0100     		.2byte	0x1
 2461 0294 50       		.byte	0x50
 2462 0295 0E000000 		.4byte	.LVL45
 2463 0299 1C000000 		.4byte	.LFE9
 2464 029d 0400     		.2byte	0x4
 2465 029f F3       		.byte	0xf3
 2466 02a0 01       		.uleb128 0x1
 2467 02a1 50       		.byte	0x50
 2468 02a2 9F       		.byte	0x9f
 2469 02a3 00000000 		.4byte	0
 2470 02a7 00000000 		.4byte	0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 60


 2471              	.LLST9:
 2472 02ab 00000000 		.4byte	.LVL46
 2473 02af 0E000000 		.4byte	.LVL47
 2474 02b3 0100     		.2byte	0x1
 2475 02b5 50       		.byte	0x50
 2476 02b6 0E000000 		.4byte	.LVL47
 2477 02ba 18000000 		.4byte	.LFE10
 2478 02be 0400     		.2byte	0x4
 2479 02c0 F3       		.byte	0xf3
 2480 02c1 01       		.uleb128 0x1
 2481 02c2 50       		.byte	0x50
 2482 02c3 9F       		.byte	0x9f
 2483 02c4 00000000 		.4byte	0
 2484 02c8 00000000 		.4byte	0
 2485              	.LLST10:
 2486 02cc 00000000 		.4byte	.LVL48
 2487 02d0 04000000 		.4byte	.LVL49
 2488 02d4 0100     		.2byte	0x1
 2489 02d6 50       		.byte	0x50
 2490 02d7 04000000 		.4byte	.LVL49
 2491 02db 10000000 		.4byte	.LFE11
 2492 02df 0400     		.2byte	0x4
 2493 02e1 F3       		.byte	0xf3
 2494 02e2 01       		.uleb128 0x1
 2495 02e3 50       		.byte	0x50
 2496 02e4 9F       		.byte	0x9f
 2497 02e5 00000000 		.4byte	0
 2498 02e9 00000000 		.4byte	0
 2499              	.LLST11:
 2500 02ed 00000000 		.4byte	.LVL50
 2501 02f1 04000000 		.4byte	.LVL51
 2502 02f5 0100     		.2byte	0x1
 2503 02f7 50       		.byte	0x50
 2504 02f8 04000000 		.4byte	.LVL51
 2505 02fc 10000000 		.4byte	.LFE12
 2506 0300 0400     		.2byte	0x4
 2507 0302 F3       		.byte	0xf3
 2508 0303 01       		.uleb128 0x1
 2509 0304 50       		.byte	0x50
 2510 0305 9F       		.byte	0x9f
 2511 0306 00000000 		.4byte	0
 2512 030a 00000000 		.4byte	0
 2513              	.LLST12:
 2514 030e 00000000 		.4byte	.LVL52
 2515 0312 0C000000 		.4byte	.LVL53
 2516 0316 0100     		.2byte	0x1
 2517 0318 50       		.byte	0x50
 2518 0319 0C000000 		.4byte	.LVL53
 2519 031d 12000000 		.4byte	.LVL55
 2520 0321 0100     		.2byte	0x1
 2521 0323 54       		.byte	0x54
 2522 0324 12000000 		.4byte	.LVL55
 2523 0328 1C000000 		.4byte	.LFE13
 2524 032c 0400     		.2byte	0x4
 2525 032e F3       		.byte	0xf3
 2526 032f 01       		.uleb128 0x1
 2527 0330 50       		.byte	0x50
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 61


 2528 0331 9F       		.byte	0x9f
 2529 0332 00000000 		.4byte	0
 2530 0336 00000000 		.4byte	0
 2531              	.LLST13:
 2532 033a 00000000 		.4byte	.LVL52
 2533 033e 0F000000 		.4byte	.LVL54-1
 2534 0342 0100     		.2byte	0x1
 2535 0344 51       		.byte	0x51
 2536 0345 0F000000 		.4byte	.LVL54-1
 2537 0349 1C000000 		.4byte	.LFE13
 2538 034d 0400     		.2byte	0x4
 2539 034f F3       		.byte	0xf3
 2540 0350 01       		.uleb128 0x1
 2541 0351 51       		.byte	0x51
 2542 0352 9F       		.byte	0x9f
 2543 0353 00000000 		.4byte	0
 2544 0357 00000000 		.4byte	0
 2545              	.LLST14:
 2546 035b 00000000 		.4byte	.LVL56
 2547 035f 0C000000 		.4byte	.LVL57
 2548 0363 0100     		.2byte	0x1
 2549 0365 50       		.byte	0x50
 2550 0366 0C000000 		.4byte	.LVL57
 2551 036a 12000000 		.4byte	.LVL59
 2552 036e 0100     		.2byte	0x1
 2553 0370 54       		.byte	0x54
 2554 0371 12000000 		.4byte	.LVL59
 2555 0375 1C000000 		.4byte	.LFE14
 2556 0379 0400     		.2byte	0x4
 2557 037b F3       		.byte	0xf3
 2558 037c 01       		.uleb128 0x1
 2559 037d 50       		.byte	0x50
 2560 037e 9F       		.byte	0x9f
 2561 037f 00000000 		.4byte	0
 2562 0383 00000000 		.4byte	0
 2563              	.LLST15:
 2564 0387 00000000 		.4byte	.LVL56
 2565 038b 0F000000 		.4byte	.LVL58-1
 2566 038f 0100     		.2byte	0x1
 2567 0391 51       		.byte	0x51
 2568 0392 0F000000 		.4byte	.LVL58-1
 2569 0396 16000000 		.4byte	.LVL60
 2570 039a 0100     		.2byte	0x1
 2571 039c 55       		.byte	0x55
 2572 039d 16000000 		.4byte	.LVL60
 2573 03a1 1C000000 		.4byte	.LFE14
 2574 03a5 0800     		.2byte	0x8
 2575 03a7 F3       		.byte	0xf3
 2576 03a8 01       		.uleb128 0x1
 2577 03a9 50       		.byte	0x50
 2578 03aa 32       		.byte	0x32
 2579 03ab 24       		.byte	0x24
 2580 03ac 73       		.byte	0x73
 2581 03ad 00       		.sleb128 0
 2582 03ae 22       		.byte	0x22
 2583 03af 00000000 		.4byte	0
 2584 03b3 00000000 		.4byte	0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 62


 2585              	.LLST16:
 2586 03b7 00000000 		.4byte	.LVL61
 2587 03bb 0C000000 		.4byte	.LVL62
 2588 03bf 0100     		.2byte	0x1
 2589 03c1 50       		.byte	0x50
 2590 03c2 0C000000 		.4byte	.LVL62
 2591 03c6 44000000 		.4byte	.LVL65
 2592 03ca 0100     		.2byte	0x1
 2593 03cc 54       		.byte	0x54
 2594 03cd 44000000 		.4byte	.LVL65
 2595 03d1 5C000000 		.4byte	.LFE15
 2596 03d5 0400     		.2byte	0x4
 2597 03d7 F3       		.byte	0xf3
 2598 03d8 01       		.uleb128 0x1
 2599 03d9 50       		.byte	0x50
 2600 03da 9F       		.byte	0x9f
 2601 03db 00000000 		.4byte	0
 2602 03df 00000000 		.4byte	0
 2603              	.LLST17:
 2604 03e3 00000000 		.4byte	.LVL61
 2605 03e7 0F000000 		.4byte	.LVL63-1
 2606 03eb 0100     		.2byte	0x1
 2607 03ed 51       		.byte	0x51
 2608 03ee 0F000000 		.4byte	.LVL63-1
 2609 03f2 1C000000 		.4byte	.LVL64
 2610 03f6 0400     		.2byte	0x4
 2611 03f8 F3       		.byte	0xf3
 2612 03f9 01       		.uleb128 0x1
 2613 03fa 51       		.byte	0x51
 2614 03fb 9F       		.byte	0x9f
 2615 03fc 1C000000 		.4byte	.LVL64
 2616 0400 48000000 		.4byte	.LVL66
 2617 0404 0100     		.2byte	0x1
 2618 0406 51       		.byte	0x51
 2619 0407 00000000 		.4byte	0
 2620 040b 00000000 		.4byte	0
 2621              	.LLST18:
 2622 040f 00000000 		.4byte	.LVL69
 2623 0413 0C000000 		.4byte	.LVL70
 2624 0417 0100     		.2byte	0x1
 2625 0419 50       		.byte	0x50
 2626 041a 0C000000 		.4byte	.LVL70
 2627 041e 28000000 		.4byte	.LVL74
 2628 0422 0100     		.2byte	0x1
 2629 0424 55       		.byte	0x55
 2630 0425 28000000 		.4byte	.LVL74
 2631 0429 40000000 		.4byte	.LFE16
 2632 042d 0400     		.2byte	0x4
 2633 042f F3       		.byte	0xf3
 2634 0430 01       		.uleb128 0x1
 2635 0431 50       		.byte	0x50
 2636 0432 9F       		.byte	0x9f
 2637 0433 00000000 		.4byte	0
 2638 0437 00000000 		.4byte	0
 2639              	.LLST19:
 2640 043b 00000000 		.4byte	.LVL69
 2641 043f 0F000000 		.4byte	.LVL71-1
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 63


 2642 0443 0100     		.2byte	0x1
 2643 0445 51       		.byte	0x51
 2644 0446 0F000000 		.4byte	.LVL71-1
 2645 044a 1C000000 		.4byte	.LVL72
 2646 044e 0400     		.2byte	0x4
 2647 0450 F3       		.byte	0xf3
 2648 0451 01       		.uleb128 0x1
 2649 0452 51       		.byte	0x51
 2650 0453 9F       		.byte	0x9f
 2651 0454 1C000000 		.4byte	.LVL72
 2652 0458 25000000 		.4byte	.LVL73-1
 2653 045c 0100     		.2byte	0x1
 2654 045e 50       		.byte	0x50
 2655 045f 00000000 		.4byte	0
 2656 0463 00000000 		.4byte	0
 2657              	.LLST20:
 2658 0467 00000000 		.4byte	.LVL76
 2659 046b 0C000000 		.4byte	.LVL77
 2660 046f 0100     		.2byte	0x1
 2661 0471 50       		.byte	0x50
 2662 0472 0C000000 		.4byte	.LVL77
 2663 0476 2A000000 		.4byte	.LVL82
 2664 047a 0100     		.2byte	0x1
 2665 047c 54       		.byte	0x54
 2666 047d 2A000000 		.4byte	.LVL82
 2667 0481 48000000 		.4byte	.LFE17
 2668 0485 0400     		.2byte	0x4
 2669 0487 F3       		.byte	0xf3
 2670 0488 01       		.uleb128 0x1
 2671 0489 50       		.byte	0x50
 2672 048a 9F       		.byte	0x9f
 2673 048b 00000000 		.4byte	0
 2674 048f 00000000 		.4byte	0
 2675              	.LLST21:
 2676 0493 00000000 		.4byte	.LVL76
 2677 0497 0F000000 		.4byte	.LVL78-1
 2678 049b 0100     		.2byte	0x1
 2679 049d 51       		.byte	0x51
 2680 049e 0F000000 		.4byte	.LVL78-1
 2681 04a2 1C000000 		.4byte	.LVL79
 2682 04a6 0400     		.2byte	0x4
 2683 04a8 F3       		.byte	0xf3
 2684 04a9 01       		.uleb128 0x1
 2685 04aa 51       		.byte	0x51
 2686 04ab 9F       		.byte	0x9f
 2687 04ac 1C000000 		.4byte	.LVL79
 2688 04b0 1F000000 		.4byte	.LVL80-1
 2689 04b4 0100     		.2byte	0x1
 2690 04b6 50       		.byte	0x50
 2691 04b7 00000000 		.4byte	0
 2692 04bb 00000000 		.4byte	0
 2693              		.section	.debug_aranges,"",%progbits
 2694 0000 A4000000 		.4byte	0xa4
 2695 0004 0200     		.2byte	0x2
 2696 0006 00000000 		.4byte	.Ldebug_info0
 2697 000a 04       		.byte	0x4
 2698 000b 00       		.byte	0
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 64


 2699 000c 0000     		.2byte	0
 2700 000e 0000     		.2byte	0
 2701 0010 00000000 		.4byte	.LFB1
 2702 0014 88010000 		.4byte	.LFE1-.LFB1
 2703 0018 00000000 		.4byte	.LFB2
 2704 001c 24000000 		.4byte	.LFE2-.LFB2
 2705 0020 00000000 		.4byte	.LFB0
 2706 0024 20000000 		.4byte	.LFE0-.LFB0
 2707 0028 00000000 		.4byte	.LFB3
 2708 002c 10000000 		.4byte	.LFE3-.LFB3
 2709 0030 00000000 		.4byte	.LFB4
 2710 0034 14000000 		.4byte	.LFE4-.LFB4
 2711 0038 00000000 		.4byte	.LFB5
 2712 003c 14000000 		.4byte	.LFE5-.LFB5
 2713 0040 00000000 		.4byte	.LFB6
 2714 0044 28000000 		.4byte	.LFE6-.LFB6
 2715 0048 00000000 		.4byte	.LFB7
 2716 004c 2C000000 		.4byte	.LFE7-.LFB7
 2717 0050 00000000 		.4byte	.LFB8
 2718 0054 10000000 		.4byte	.LFE8-.LFB8
 2719 0058 00000000 		.4byte	.LFB9
 2720 005c 1C000000 		.4byte	.LFE9-.LFB9
 2721 0060 00000000 		.4byte	.LFB10
 2722 0064 18000000 		.4byte	.LFE10-.LFB10
 2723 0068 00000000 		.4byte	.LFB11
 2724 006c 10000000 		.4byte	.LFE11-.LFB11
 2725 0070 00000000 		.4byte	.LFB12
 2726 0074 10000000 		.4byte	.LFE12-.LFB12
 2727 0078 00000000 		.4byte	.LFB13
 2728 007c 1C000000 		.4byte	.LFE13-.LFB13
 2729 0080 00000000 		.4byte	.LFB14
 2730 0084 1C000000 		.4byte	.LFE14-.LFB14
 2731 0088 00000000 		.4byte	.LFB15
 2732 008c 5C000000 		.4byte	.LFE15-.LFB15
 2733 0090 00000000 		.4byte	.LFB16
 2734 0094 40000000 		.4byte	.LFE16-.LFB16
 2735 0098 00000000 		.4byte	.LFB17
 2736 009c 48000000 		.4byte	.LFE17-.LFB17
 2737 00a0 00000000 		.4byte	0
 2738 00a4 00000000 		.4byte	0
 2739              		.section	.debug_ranges,"",%progbits
 2740              	.Ldebug_ranges0:
 2741 0000 00000000 		.4byte	.LFB1
 2742 0004 88010000 		.4byte	.LFE1
 2743 0008 00000000 		.4byte	.LFB2
 2744 000c 24000000 		.4byte	.LFE2
 2745 0010 00000000 		.4byte	.LFB0
 2746 0014 20000000 		.4byte	.LFE0
 2747 0018 00000000 		.4byte	.LFB3
 2748 001c 10000000 		.4byte	.LFE3
 2749 0020 00000000 		.4byte	.LFB4
 2750 0024 14000000 		.4byte	.LFE4
 2751 0028 00000000 		.4byte	.LFB5
 2752 002c 14000000 		.4byte	.LFE5
 2753 0030 00000000 		.4byte	.LFB6
 2754 0034 28000000 		.4byte	.LFE6
 2755 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 65


 2756 003c 2C000000 		.4byte	.LFE7
 2757 0040 00000000 		.4byte	.LFB8
 2758 0044 10000000 		.4byte	.LFE8
 2759 0048 00000000 		.4byte	.LFB9
 2760 004c 1C000000 		.4byte	.LFE9
 2761 0050 00000000 		.4byte	.LFB10
 2762 0054 18000000 		.4byte	.LFE10
 2763 0058 00000000 		.4byte	.LFB11
 2764 005c 10000000 		.4byte	.LFE11
 2765 0060 00000000 		.4byte	.LFB12
 2766 0064 10000000 		.4byte	.LFE12
 2767 0068 00000000 		.4byte	.LFB13
 2768 006c 1C000000 		.4byte	.LFE13
 2769 0070 00000000 		.4byte	.LFB14
 2770 0074 1C000000 		.4byte	.LFE14
 2771 0078 00000000 		.4byte	.LFB15
 2772 007c 5C000000 		.4byte	.LFE15
 2773 0080 00000000 		.4byte	.LFB16
 2774 0084 40000000 		.4byte	.LFE16
 2775 0088 00000000 		.4byte	.LFB17
 2776 008c 48000000 		.4byte	.LFE17
 2777 0090 00000000 		.4byte	0
 2778 0094 00000000 		.4byte	0
 2779              		.section	.debug_line,"",%progbits
 2780              	.Ldebug_line0:
 2781 0000 95020000 		.section	.debug_str,"MS",%progbits,1
 2781      02004B00 
 2781      00000201 
 2781      FB0E0D00 
 2781      01010101 
 2782              	.LASF10:
 2783 0000 75696E74 		.ascii	"uint16\000"
 2783      313600
 2784              	.LASF49:
 2785 0007 61646347 		.ascii	"adcGain\000"
 2785      61696E00 
 2786              	.LASF24:
 2787 000f 636F756E 		.ascii	"counts\000"
 2787      747300
 2788              	.LASF54:
 2789 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2789      436F756E 
 2789      7473546F 
 2789      5F566F6C 
 2789      747300
 2790              	.LASF26:
 2791 0029 4144435F 		.ascii	"ADC_Init\000"
 2791      496E6974 
 2791      00
 2792              	.LASF64:
 2793 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2793      43313120 
 2793      352E342E 
 2793      31203230 
 2793      31363036 
 2794 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2794      20726576 
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 66


 2794      6973696F 
 2794      6E203233 
 2794      37373135 
 2795 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2795      66756E63 
 2795      74696F6E 
 2795      2D736563 
 2795      74696F6E 
 2796              	.LASF7:
 2797 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2797      206C6F6E 
 2797      6720756E 
 2797      7369676E 
 2797      65642069 
 2798              	.LASF25:
 2799 00d7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2799      496E7075 
 2799      7473506C 
 2799      6163656D 
 2799      656E7400 
 2800              	.LASF30:
 2801 00eb 4144435F 		.ascii	"ADC_StartConvert\000"
 2801      53746172 
 2801      74436F6E 
 2801      76657274 
 2801      00
 2802              	.LASF6:
 2803 00fc 6C6F6E67 		.ascii	"long long int\000"
 2803      206C6F6E 
 2803      6720696E 
 2803      7400
 2804              	.LASF0:
 2805 010a 7369676E 		.ascii	"signed char\000"
 2805      65642063 
 2805      68617200 
 2806              	.LASF32:
 2807 0116 73746174 		.ascii	"status\000"
 2807      757300
 2808              	.LASF13:
 2809 011d 696E7433 		.ascii	"int32\000"
 2809      3200
 2810              	.LASF28:
 2811 0123 4144435F 		.ascii	"ADC_Start\000"
 2811      53746172 
 2811      7400
 2812              	.LASF4:
 2813 012d 6C6F6E67 		.ascii	"long int\000"
 2813      20696E74 
 2813      00
 2814              	.LASF53:
 2815 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2815      436F756E 
 2815      7473546F 
 2815      5F75566F 
 2815      6C747300 
 2816              	.LASF59:
 2817 014a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 67


 2817      636F756E 
 2817      74735065 
 2817      72313056 
 2817      6F6C7400 
 2818              	.LASF9:
 2819 015e 75696E74 		.ascii	"uint8\000"
 2819      3800
 2820              	.LASF62:
 2821 0164 43794465 		.ascii	"CyDelayUs\000"
 2821      6C617955 
 2821      7300
 2822              	.LASF16:
 2823 016e 646F7562 		.ascii	"double\000"
 2823      6C6500
 2824              	.LASF11:
 2825 0175 75696E74 		.ascii	"uint32\000"
 2825      333200
 2826              	.LASF39:
 2827 017c 6D61736B 		.ascii	"mask\000"
 2827      00
 2828              	.LASF57:
 2829 0181 4144435F 		.ascii	"ADC_initVar\000"
 2829      696E6974 
 2829      56617200 
 2830              	.LASF35:
 2831 018d 7265744D 		.ascii	"retMode\000"
 2831      6F646500 
 2832              	.LASF44:
 2833 0195 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2833      5365744C 
 2833      696D6974 
 2833      4D61736B 
 2833      00
 2834              	.LASF8:
 2835 01a6 756E7369 		.ascii	"unsigned int\000"
 2835      676E6564 
 2835      20696E74 
 2835      00
 2836              	.LASF67:
 2837 01b3 75566F6C 		.ascii	"uVolts\000"
 2837      747300
 2838              	.LASF5:
 2839 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 2839      20756E73 
 2839      69676E65 
 2839      6420696E 
 2839      7400
 2840              	.LASF45:
 2841 01cc 4144435F 		.ascii	"ADC_SetSatMask\000"
 2841      53657453 
 2841      61744D61 
 2841      736B00
 2842              	.LASF55:
 2843 01db 766F6C74 		.ascii	"volts\000"
 2843      7300
 2844              	.LASF23:
 2845 01e1 746D7052 		.ascii	"tmpRegVal\000"
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 68


 2845      65675661 
 2845      6C00
 2846              	.LASF3:
 2847 01eb 73686F72 		.ascii	"short unsigned int\000"
 2847      7420756E 
 2847      7369676E 
 2847      65642069 
 2847      6E7400
 2848              	.LASF61:
 2849 01fe 4379496E 		.ascii	"CyIntSetVector\000"
 2849      74536574 
 2849      56656374 
 2849      6F7200
 2850              	.LASF31:
 2851 020d 4144435F 		.ascii	"ADC_StopConvert\000"
 2851      53746F70 
 2851      436F6E76 
 2851      65727400 
 2852              	.LASF52:
 2853 021d 6D566F6C 		.ascii	"mVolts\000"
 2853      747300
 2854              	.LASF19:
 2855 0224 72656733 		.ascii	"reg32\000"
 2855      3200
 2856              	.LASF66:
 2857 022a 433A5C55 		.ascii	"C:\\Users\\bhatt\\Documents\\PSoC Creator\\MotorTes"
 2857      73657273 
 2857      5C626861 
 2857      74745C44 
 2857      6F63756D 
 2858 0258 74735C41 		.ascii	"ts\\ArmDriver.cydsn\000"
 2858      726D4472 
 2858      69766572 
 2858      2E637964 
 2858      736E00
 2859              	.LASF14:
 2860 026b 666C6F61 		.ascii	"float32\000"
 2860      74333200 
 2861              	.LASF21:
 2862 0273 73697A65 		.ascii	"sizetype\000"
 2862      74797065 
 2862      00
 2863              	.LASF41:
 2864 027c 6C6F774C 		.ascii	"lowLimit\000"
 2864      696D6974 
 2864      00
 2865              	.LASF20:
 2866 0285 6C6F6E67 		.ascii	"long double\000"
 2866      20646F75 
 2866      626C6500 
 2867              	.LASF42:
 2868 0291 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2868      53657448 
 2868      6967684C 
 2868      696D6974 
 2868      00
 2869              	.LASF33:
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 69


 2870 02a2 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2870      4973456E 
 2870      64436F6E 
 2870      76657273 
 2870      696F6E00 
 2871              	.LASF17:
 2872 02b6 696E7436 		.ascii	"int64\000"
 2872      3400
 2873              	.LASF60:
 2874 02bc 4379496E 		.ascii	"CyIntSetPriority\000"
 2874      74536574 
 2874      5072696F 
 2874      72697479 
 2874      00
 2875              	.LASF38:
 2876 02cd 4144435F 		.ascii	"ADC_SetChanMask\000"
 2876      53657443 
 2876      68616E4D 
 2876      61736B00 
 2877              	.LASF65:
 2878 02dd 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2878      72617465 
 2878      645F536F 
 2878      75726365 
 2878      5C50536F 
 2879              	.LASF48:
 2880 02fa 4144435F 		.ascii	"ADC_SetGain\000"
 2880      53657447 
 2880      61696E00 
 2881              	.LASF15:
 2882 0306 666C6F61 		.ascii	"float\000"
 2882      7400
 2883              	.LASF43:
 2884 030c 68696768 		.ascii	"highLimit\000"
 2884      4C696D69 
 2884      7400
 2885              	.LASF50:
 2886 0316 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2886      436F756E 
 2886      7473546F 
 2886      5F6D566F 
 2886      6C747300 
 2887              	.LASF40:
 2888 032a 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2888      5365744C 
 2888      6F774C69 
 2888      6D697400 
 2889              	.LASF63:
 2890 033a 43794861 		.ascii	"CyHalt\000"
 2890      6C7400
 2891              	.LASF1:
 2892 0341 756E7369 		.ascii	"unsigned char\000"
 2892      676E6564 
 2892      20636861 
 2892      7200
 2893              	.LASF58:
 2894 034f 4144435F 		.ascii	"ADC_offset\000"
ARM GAS  C:\Users\bhatt\AppData\Local\Temp\ccAUtraa.s 			page 70


 2894      6F666673 
 2894      657400
 2895              	.LASF2:
 2896 035a 73686F72 		.ascii	"short int\000"
 2896      7420696E 
 2896      7400
 2897              	.LASF29:
 2898 0364 4144435F 		.ascii	"ADC_Stop\000"
 2898      53746F70 
 2898      00
 2899              	.LASF22:
 2900 036d 63684E75 		.ascii	"chNum\000"
 2900      6D00
 2901              	.LASF36:
 2902 0373 6368616E 		.ascii	"chan\000"
 2902      00
 2903              	.LASF18:
 2904 0378 63686172 		.ascii	"char\000"
 2904      00
 2905              	.LASF56:
 2906 037d 4144435F 		.ascii	"ADC_channelsConfig\000"
 2906      6368616E 
 2906      6E656C73 
 2906      436F6E66 
 2906      696700
 2907              	.LASF47:
 2908 0390 6F666673 		.ascii	"offset\000"
 2908      657400
 2909              	.LASF51:
 2910 0397 61646343 		.ascii	"adcCounts\000"
 2910      6F756E74 
 2910      7300
 2911              	.LASF27:
 2912 03a1 4144435F 		.ascii	"ADC_Enable\000"
 2912      456E6162 
 2912      6C6500
 2913              	.LASF12:
 2914 03ac 696E7431 		.ascii	"int16\000"
 2914      3600
 2915              	.LASF46:
 2916 03b2 4144435F 		.ascii	"ADC_SetOffset\000"
 2916      5365744F 
 2916      66667365 
 2916      7400
 2917              	.LASF37:
 2918 03c0 72657375 		.ascii	"result\000"
 2918      6C7400
 2919              	.LASF34:
 2920 03c7 4144435F 		.ascii	"ADC_GetResult16\000"
 2920      47657452 
 2920      6573756C 
 2920      74313600 
 2921              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
